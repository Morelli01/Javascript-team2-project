{"mappings":"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","sources":["src/javascript/film-catalog.js","src/javascript/utils.js","src/javascript/local_storage.js"],"sourcesContent":["'use strict';\nimport { getFilms, getGenres, getCategoriesQuery } from './api';\nimport { createPagination } from './pagination';\nimport { round } from './utils';\nimport { onClickFilm, favoriteArr } from './local_storage'; //*-------\n\nconst refs = {\n  ulEl: document.querySelector('.search_film_list'),\n  inputEl: document.querySelector('.search_film_input'),\n  divPagination: document.getElementById('pagination'),\n  form: document.getElementById('form'),\n  btnReset: document.querySelector('.btn_reset'),\n  toTop: document.querySelector('.to_top'),\n  falseResultMessage: document.querySelector('.cards__message'),\n};\n\nlet categories = {};\nlet currentPage = 1;\nlet searchQuery = '';\n\ngetGenres()\n  .then(res => {\n    res.forEach(({ id, name }) => {\n      categories[id] = name;\n    });\n    return getFilms(currentPage);\n  })\n  .then(categoriesData => {\n    markupFilm(categoriesData.results);\n    paginationTrendWeek(categoriesData);\n  })\n  .catch(Error);\n\nfunction markupFilm(data) {\n  const markup = data\n    .map(\n      ({\n        id,\n        poster_path,\n        original_title,\n        genre_ids,\n        release_date,\n        vote_average,\n        first_air_date,\n        original_name\n      }) => {\n        let url = poster_path\n          ? `https://image.tmdb.org/t/p/original${poster_path}`\n          : 'https://www.tgv.com.my/assets/images/404/movie-poster.jpg';\n        const year = yearsFilm(release_date, first_air_date);\n        let genre = categoriesFilms(genre_ids);\n        const inStorage = favoriteArr.some(film => film.id === id); //*-------\n        const buttonText = inStorage ? 'Remove from my library' : 'Add to my library';  //*-------\n        return `<li class=\"search_film_img_wrap movie-image list_item\" data-id='${id}'>\n        <img loga src=\"${url}\" alt=\"${\n            original_name || original_title\n          }\" width=\"395\" height=\"574\" class=\"search_film_img\"/>\n        <div class=\"wrap\">\n          <div class=\"search_film_wrap\">\n            <p class=\"search_film_title\">${original_name || original_title}</p>\n            <p class=\"search_film_genre\">${genre} | ${year}</p> \n            <div class=\"stars\">\n            <div class='film_rating-wrapper'>\n              <div class='film_rating' style='--rating: ${vote_average / 2};' aria-label='Rating of this film is ${round((vote_average / 2), 10)} out of 5.'></div>\n            </div>\n         </div>\n          </div>\n          <button type=\"button\" class=\"js_add_collection\" data-id=\"${id}\">${buttonText}</button>\n        </div>\n      </li>`;\n      }\n    )\n    .join('');\n  refs.ulEl.innerHTML = markup;\n}\n\nrefs.ulEl.addEventListener('click', onClickFilm); //*-------\n\nfunction categoriesFilms(genreIds) {\n  let categoriesFilm = [];\n  if (typeof genreIds !== 'undefined') {\n    categoriesFilm = genreIds\n      .filter(genre => typeof genre !== 'undefined')\n      .map(genre => {\n        if (!categories[genre]) {\n          return 'Film';\n        }\n        return categories[genre];\n      });\n  }\n  if (categoriesFilm.length > 2) {\n    categoriesFilm = categoriesFilm.slice(0, 2);\n  }\n  if (categoriesFilm.length === 0) {\n    return 'Film';\n  }\n  return categoriesFilm.join(', ');\n}\n\nfunction yearsFilm(release_date, first_air_date) {\n  const year =\n    typeof release_date !== 'undefined'\n      ? release_date.split('-')[0]\n      : typeof first_air_date !== 'undefined'\n      ? first_air_date.split('-')[0]\n      : '';\n  return year;\n}\n\nrefs.form.addEventListener('submit', onSubmit);\n\nasync function onSubmit(ev) {\n  ev.preventDefault();\n  currentPage = 1;\n  searchQuery = ev.currentTarget.elements.film_name.value.trim();\n  refs.divPagination.classList.add('display-hidden');\n  refs.falseResultMessage.classList.add('display-hidden');\n\n  if (searchQuery.length >= 1) {\n    refs.btnReset.classList.remove('is-hidden');\n  }\n\n  const response = await getCategoriesQuery(searchQuery, currentPage);\n  refs.ulEl.innerHTML = '';\n\n  markupFilm(response.results);\n  paginationSearchFilms(response);\n  addFalseResultText(response);\n}\n\nfunction paginationTrendWeek(response) {\n  if (response.total_results > 20) {\n    refs.divPagination.classList.remove('display-hidden');\n\n    const pagination = createPagination(\n      response.total_results,\n      response.total_pages\n    );\n\n    pagination.on('afterMove', event => {\n      currentPage = event.page;\n      getFilms(currentPage)\n        .then(data => {\n          markupFilm(data.results);\n          window.scrollTo({\n            top: 450,\n            behavior: 'smooth',\n          });\n        })\n        .catch(error => {\n          console.error('Error:', error);\n        });\n    });\n  }\n}\n\nfunction paginationSearchFilms(response) {\n  if (response.total_results > 20) {\n    refs.divPagination.classList.remove('display-hidden');\n\n    const pagination = createPagination(\n      response.total_results,\n      response.total_pages\n    );\n\n    pagination.on('afterMove', event => {\n      currentPage = event.page;\n      getCategoriesQuery(searchQuery, currentPage)\n        .then(data => {\n          markupFilm(data.results);\n          window.scrollTo({\n            top: 450,\n            behavior: 'smooth',\n          });\n        })\n        .catch(error => {\n          console.error('Error:', error);\n        });\n    });\n  }\n}\n\nfunction addFalseResultText(response) {\n  if (response.total_results === 0) {\n    refs.falseResultMessage.classList.remove('display-hidden');\n  }\n}\n\nrefs.btnReset.addEventListener('click', () => {\n  refs.btnReset.classList.add('is-hidden');\n  refs.form.reset();\n});\n\nfunction Error(err) {\n  console.log(err);\n}\n","function round(number, digits) {\n  return Math.round(number * digits) / digits;\n}\n\nconst getRandomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nfunction renderStars(element, rating) {\n  return (element.innerHTML = `\n    <div class=\"film_rating\" style=\"--rating:${\n      rating / 2\n    };\" aria-label=\"Rating of this film is ${Math.round(\n    rating / 2\n  )} out of 5.\"></div>\n`);\n}\n\nexport { round, getRandomNumber, renderStars };\n","import { getCategoriesId } from './api';\n\n\nconst KEY_FAVORITE = 'favorite';\n\nexport const favoriteArr = JSON.parse(localStorage.getItem(KEY_FAVORITE)) ?? [];\n\nexport async function onClickFilm(ev) {\n  let filmId = null;\n  const btn = ev.target.closest('.js_add_collection');\n  if (btn) {\n    const { id } = btn.closest('li').dataset;\n    filmId = await findFilm(Number(id));\n    if (filmId) {\n      const inStorage = favoriteArr.some(({ id }) => id === filmId);\n      if (inStorage) {\n        favoriteArr.splice(\n          favoriteArr.findIndex(film => film.id === filmId),\n          1\n        );\n        localStorage.setItem(KEY_FAVORITE, JSON.stringify(favoriteArr));\n        btn.textContent = 'Add to my library';\n      } else {\n        const film = await getCategoriesId(filmId);\n        favoriteArr.push(film);\n        localStorage.setItem(KEY_FAVORITE, JSON.stringify(favoriteArr));\n        btn.textContent = 'Remove from my library';\n      }\n    }\n  }\n}\n\nasync function findFilm(ev) {\n  const res = await getCategoriesId(ev);\n  return res.id === ev ? res.id : null;\n}\n"],"names":["$dK6vY","parcelRequire","$f86c2bb9432d860c$var$refs","ulEl","document","querySelector","inputEl","divPagination","getElementById","form","btnReset","toTop","falseResultMessage","$f86c2bb9432d860c$var$categories","$f86c2bb9432d860c$var$currentPage","$f86c2bb9432d860c$var$searchQuery","$f86c2bb9432d860c$var$markupFilm","data","markup","map","id","poster_path","original_title","genre_ids","release_date","vote_average","first_air_date","original_name","url","year","split","$f86c2bb9432d860c$var$yearsFilm","genre","genreIds","categoriesFilm","filter","length","slice","join","$f86c2bb9432d860c$var$categoriesFilms","buttonText","$g7c2E","favoriteArr","some","film","$9Wu9X","round","innerHTML","getGenres","then","res","forEach","name","getFilms","categoriesData","results","response","total_results","classList","remove","$3u1GM","createPagination","total_pages","on","event","page","window","scrollTo","top","behavior","catch","error","console","$f86c2bb9432d860c$var$paginationTrendWeek","err","log","addEventListener","onClickFilm","async","ev","preventDefault","currentTarget","elements","film_name","value","trim","add","getCategoriesQuery","$f86c2bb9432d860c$var$paginationSearchFilms","$f86c2bb9432d860c$var$addFalseResultText","reset","$73d0ece61bfba828$export$2077e0241d6afd3c","number","digits","Math","$73d0ece61bfba828$export$eab19c48dcb6310d","min","max","floor","random","$73d0ece61bfba828$export$6b958f153b36132a","element","rating","$bbb6a40c82964fbf$var$KEY_FAVORITE","$bbb6a40c82964fbf$export$f5cb82f0aad40ad6","JSON","parse","localStorage","getItem","$bbb6a40c82964fbf$export$f2eec75123b53c71","filmId","btn","target","closest","id1","dataset","getCategoriesId","$bbb6a40c82964fbf$var$findFilm","Number","splice","findIndex","setItem","stringify","textContent","push"],"version":3,"file":"film-catalog.b842b8e5.js.map"}