{"mappings":"sSAAA,IAAAA,EAAAC,EAAA,S,0BAIC,WAEC,IADA,EAAAC,EAAAC,gBAEgC,MAA9BC,OAAQC,SAASC,UAAiD,gBAA7BF,OAAOC,SAASC,UAEvB,+BAA7BF,OAAOC,SAASC,UAA0E,yCAA7BF,OAAOC,SAASC,SAC9E,OACF,MAAMC,QAAa,EAAAP,EAAAQ,wBACnBC,QAAQC,IAAI,YAAaH,GAEzB,MAAMI,QAAe,EAAAX,EAAAY,aAGfC,EAAmBC,SAASC,cAAc,uBAChD,GAAIF,EAAkB,CACpB,MAAMG,EAAeC,EAAaV,EAAMI,GACxCE,EAAiBK,UAAYF,C,CAEhC,EAlBA,IAmBD,EAAAd,EAAAiB,eACA,MAAMF,EAAe,CAACV,EAAMI,KAC1B,MACMS,GADUhB,OAAOiB,YAAc,IAAM,kDAAoD,oDACpEd,EAAKe,YAC1BC,EAAWhB,EAAKgB,SAChBC,EAAQjB,EAAKkB,eAGbC,EAAc,IAAIC,KAAKpB,EAAKqB,cAK5BC,EAAuB,GAJjBH,EAAYI,UAAUC,WAAWC,SAAS,EAAG,SAC1CN,EAAYO,WAAa,GAAGF,WAAWC,SAAS,EAAG,QACrDN,EAAYQ,gBAInBC,EAAc5B,EAAK6B,aACnBC,EAAY9B,EAAK+B,WACjBC,EAAahC,EAAKgC,WAClBC,EAAa7B,EAChB8B,QAAQC,GAAUnC,EAAKoC,UAAUC,MAAM,EAAG,GAAGC,SAASH,EAAMI,MAC5DC,KAAI,EAACC,KAAEA,KAAWA,IAClBC,KAAK,MAER,MAAO,gFAEgC7B,wHAIGI,gPAKyBK,iOAK5BM,yGAEAE,uNAKkB,EAAAa,EAAAC,OAAMZ,EAAY,gMAIlBC,wLAKTjB,2KAM/C,C,sCCpFH,SAAS6B,EAAMC,EAAQC,GACrB,OAAOC,KAAKJ,MAAME,EAASC,GAAUA,C,qJAGvC,MAAME,EAAkB,CAACC,EAAKC,IACrBH,KAAKI,MAAMJ,KAAKK,UAAYF,EAAMD,EAAM,IAAMA,EAGvD,SAASI,EAAYC,EAASC,GAC5B,OAAQD,EAAQ5C,UAAY,kDAExB6C,EAAS,0CAC8BR,KAAKJ,MAC9CY,EAAS,wB","sources":["src/javascript/film-month.js","src/javascript/utils.js"],"sourcesContent":["import { getGenres, getRandomFilmOfMonth } from './api';\nimport { spinnerStart, spinnerStop } from './spin';\nimport { round } from './utils';\n\n(async () => {\n  spinnerStart();\n  if (\n    (window.location.pathname !== '/' && window.location.pathname !== '/index.html')\n    &&\n    (window.location.pathname !== '/Javascript-team2-project/' && window.location.pathname !== '/Javascript-team2-project/index.html')\n  ) return;\n  const film = await getRandomFilmOfMonth();\n  console.log('filmMonth', film);\n\n  const genres = await getGenres();\n  // spinnerStop()\n\n  const filmMonthWrapper = document.querySelector('.film-month_wrapper');\n  if (filmMonthWrapper) {\n    const resultMarkup = createMarkup(film, genres);\n    filmMonthWrapper.innerHTML = resultMarkup;\n  }\n})();\nspinnerStop();\nconst createMarkup = (film, genres) => {\n  const baseUrl = window.innerWidth <= 600 ? 'https://image.tmdb.org/t/p/w600_and_h900_bestv2' : 'https://image.tmdb.org/t/p/w1066_and_h600_bestv2';\n  const imageSrc = baseUrl + film.poster_path;\n  const overview = film.overview;\n  const title = film.original_title;\n\n\n  const releaseDate = new Date(film.release_date);\n  const day = releaseDate.getDate().toString().padStart(2, '0');\n  const month = (releaseDate.getMonth() + 1).toString().padStart(2, '0');\n  const year = releaseDate.getFullYear();\n\n  const formattedReleaseDate = `${day} ${month} ${year}`;\n\n  const voteAverage = film.vote_average;\n  const voteCount = film.vote_count;\n  const popularity = film.popularity;\n  const filmGenres = genres\n    .filter((genre) => film.genre_ids.slice(0, 2).includes(genre.id))\n    .map(({ name }) => name)\n    .join(', ');\n\n  return `\n    <div class='film-month_image'>\n      <img class='film-month_img' src='${imageSrc}' alt=''>\n    </div>\n    <div class='film-month_content'>\n      <div>\n        <h3 class='film-month_info-title'>${title}</h3>\n      </div>\n      <div class='film-month_info'>\n        <div class='film-month_info-item'>\n          <span class='film-month_info-label'>Release date</span>\n          <span class='film-month_info-value film-month_info-year'>${formattedReleaseDate}</span>\n        </div>\n        <div class='film-month_info-item'>\n          <span class='film-month_info-label'>Vote/Votes</span>\n          <span class='film-month_info-value'>\n            <span class='value-number'>${voteAverage}</span>\n             <span class='value-separator'>/</span>\n            <span class='value-number'>${voteCount}</span>\n          </span>\n        </div>\n        <div class='film-month_info-item'>\n          <span class='film-month_info-label'>Popularity</span>\n          <span class='film-month_info-value span-value'>${round(popularity, 10)}</span>\n        </div>\n        <div class='film-month_info-item'>\n          <span class='film-month_info-label'>Genre</span>\n          <span class='film-month_info-value span-value'>${filmGenres}</span>\n        </div>\n      </div>\n      <div class='film-month_about'>\n        <h4 class='film-month_about-title'>About</h4>\n        <p class='film-month_about-description'>${overview}</p>\n      </div>\n      <div class='film-month_button'>\n        <button class='button film-month_button-add'>Add to my library</button>\n      </div>\n    </div>\n  `;\n};","function round(number, digits) {\n  return Math.round(number * digits) / digits;\n}\n\nconst getRandomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nfunction renderStars(element, rating) {\n  return (element.innerHTML = `\n    <div class=\"film_rating\" style=\"--rating:${\n      rating / 2\n    };\" aria-label=\"Rating of this film is ${Math.round(\n    rating / 2\n  )} out of 5.\"></div>\n`);\n}\n\nexport { round, getRandomNumber, renderStars };\n"],"names":["$dK6vY","parcelRequire","$dpMC2","spinnerStart","window","location","pathname","film","getRandomFilmOfMonth","console","log","genres","getGenres","filmMonthWrapper","document","querySelector","resultMarkup","$504f2e7c7c3fccdf$var$createMarkup","innerHTML","spinnerStop","imageSrc","innerWidth","poster_path","overview","title","original_title","releaseDate","Date","release_date","formattedReleaseDate","getDate","toString","padStart","getMonth","getFullYear","voteAverage","vote_average","voteCount","vote_count","popularity","filmGenres","filter","genre","genre_ids","slice","includes","id","map","name","join","$9Wu9X","round","$73d0ece61bfba828$export$2077e0241d6afd3c","number","digits","Math","$73d0ece61bfba828$export$eab19c48dcb6310d","min","max","floor","random","$73d0ece61bfba828$export$6b958f153b36132a","element","rating"],"version":3,"file":"film-month.5ac4a831.js.map"}