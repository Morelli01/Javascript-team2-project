{"mappings":"uVAAA,IAAAA,EAAAC,EAAA,S,0BAIA,MAEMC,EAAOC,SAASC,cAAc,qBAC9BC,EAAiBF,SAASC,cAAc,oBACxCE,EAAeH,SAASC,cAAc,kBAEtCG,EAAe,IAAI,EAAAC,EAAAC,cACzBF,EAAaG,8BACb,MAAMC,EAAWJ,EAAaK,QAUvB,SAASC,EAAWC,GACzB,MAAMC,EAASD,EACZE,KACC,EAACC,YACCA,EAAWC,cACXA,EAAaC,eACbA,EAAcC,OACdA,EAAMC,aACNA,EAAYC,aACZA,EAAYC,eACZA,EAAcC,GACdA,MAEA,IAAIC,EAAMR,EACN,sCAAsCA,IACtC,4DACJ,MAAMS,EA6Bd,SAAmBL,EAAcE,GAO/B,YAL0B,IAAjBF,EACHA,EAAaM,MAAM,KAAK,QACE,IAAnBJ,EACPA,EAAeI,MAAM,KAAK,GAC1B,E,CAnCaC,CAAUP,EAAcE,GAErC,MAAO,wEAAwEC,yCACpDC,WACzBP,GAAiBC,yKAIgBD,GAAiBC,mDA+B5D,SAAyBU,GACvB,IAAIC,EAAiB,QACG,IAAbD,IACTC,EAAiBD,EAASb,KAAIe,GAASA,EAAMC,QAE3CF,EAAeG,OAAS,IAC1BH,EAAiBA,EAAeI,MAAM,EAAG,IAE3C,OAA8B,IAA1BJ,EAAeG,OACV,OAEFH,EAAeK,KAAK,K,CAjDTC,CAAgBhB,QAQkBM,mJAItCJ,EAAe,2CACwB,EAAAe,EAAAC,OAC7ChB,EAAe,EACf,2GAME,IAGPa,KAAK,IACRjC,EAAKqC,UAAYxB,C,EAlDnB,EAAAf,EAAAwC,aACGC,MAAKC,IACJA,EAAIC,SAAQ,EAACnB,GAAEA,EAAEQ,KAAEA,MACjBY,WAAWpB,GAAMQ,CAAI,GACrB,IAEHa,MAAMC,OAuELC,OAAOC,SAASC,KAAKC,SAAS,qBAC5BvC,EAASsB,OAAS,GACpB5B,EAAe8C,UAAUC,OAAO,kBAChCvC,EAAWF,IAEXL,EAAa6C,UAAUC,OAAO,kB,sCChGlC,SAASC,EAAMC,EAAQC,GACrB,OAAOC,KAAKlB,MAAMgB,EAASC,GAAUA,C,qJAGvC,MAAME,EAAkB,CAACC,EAAKC,IACrBH,KAAKI,MAAMJ,KAAKK,UAAYF,EAAMD,EAAM,IAAMA,EAGvD,SAASI,EAAYC,EAASC,GAC5B,OAAQD,EAAQxB,UAAY,kDAExByB,EAAS,0CAC8BR,KAAKlB,MAC9C0B,EAAS,wB,0FCbN,MAAMC,EACXC,cACEC,KAAKvD,QAAU,GACfuD,KAAKzD,6B,CAGPA,8BACE,MAAM0D,EAAcC,aAAaC,QAAQ,YACzCH,KAAKvD,QAAUwD,EAAcG,KAAKC,MAAMJ,GAAe,E,CAGzDK,4BACEJ,aAAaK,QAAQ,WAAYH,KAAKI,UAAUR,KAAKvD,S,CAGvDgE,gBAAgBpD,GACd,OAAO2C,KAAKvD,QAAQiE,MAAKC,GAAeA,EAAYtD,IAAMA,G,CAG5DuD,iBAAiBC,GACfb,KAAKvD,QAAQqE,KAAKD,GAClBb,KAAKM,2B,CAGPS,sBAAsBF,GACpB,MAAMG,EAAQhB,KAAKvD,QAAQwE,WACzBN,GAAeA,EAAYtD,KAAOwD,EAAKxD,MAE3B,IAAV2D,IACFhB,KAAKvD,QAAQyE,OAAOF,EAAO,GAC3BhB,KAAKM,4B","sources":["src/javascript/favorite.js","src/javascript/utils.js","src/javascript/movie-library.js"],"sourcesContent":["import { getGenres } from './api';\nimport { round } from './utils';\nimport { MovieLibrary } from './movie-library';\n\nconst KEY_FAVORITE = 'favorite';\n\nconst list = document.querySelector('.search_film_list');\nconst librarySection = document.querySelector('.library-section');\nconst errorSectoin = document.querySelector('.error-section');\n\nconst movieLibrary = new MovieLibrary();\nmovieLibrary.loadLibraryFromLocalStorage();\nconst favorite = movieLibrary.library;\n\ngetGenres()\n  .then(res => {\n    res.forEach(({ id, name }) => {\n      categories[id] = name;\n    });\n  })\n  .catch(Error);\n\nexport function markupFilm(favorite) {\n  const markup = favorite\n    .map(\n      ({\n        poster_path,\n        original_name,\n        original_title,\n        genres,\n        release_date,\n        vote_average,\n        first_air_date,\n        id,\n      }) => {\n        let url = poster_path\n          ? `https://image.tmdb.org/t/p/original${poster_path}`\n          : 'https://www.tgv.com.my/assets/images/404/movie-poster.jpg';\n        const year = yearsFilm(release_date, first_air_date);\n        let genre = categoriesFilms(genres);\n        return `<li class=\"search_film_img_wrap movie-image list_item\" data-film-id='${id}'>\n        <img loading=\"lazy\" src=\"${url}\" alt=\"${\n          original_name || original_title\n        }\" width=\"395\" height=\"574\" class=\"search_film_img\"/>\n        <div class=\"wrap\">\n          <div class=\"search_film_wrap\">\n            <p class=\"search_film_title\">${original_name || original_title}</p>\n            <p class=\"search_film_genre\">${genre} | ${year}</p> \n            <div class=\"stars\">\n            <div class='film_rating-wrapper'>\n              <div class='film_rating' style='--rating: ${\n                vote_average / 2\n              };' aria-label='Rating of this film is ${round(\n          vote_average / 2,\n          10\n        )} out of 5.'></div>\n            </div>\n         </div>\n          </div>\n        </div>\n      </li>`;\n      }\n    )\n    .join('');\n  list.innerHTML = markup;\n}\n\nfunction yearsFilm(release_date, first_air_date) {\n  const year =\n    typeof release_date !== 'undefined'\n      ? release_date.split('-')[0]\n      : typeof first_air_date !== 'undefined'\n      ? first_air_date.split('-')[0]\n      : '';\n  return year;\n}\n\nfunction categoriesFilms(genreIds) {\n  let categoriesFilm = [];\n  if (typeof genreIds !== 'undefined') {\n    categoriesFilm = genreIds.map(genre => genre.name);\n  }\n  if (categoriesFilm.length > 2) {\n    categoriesFilm = categoriesFilm.slice(0, 2);\n  }\n  if (categoriesFilm.length === 0) {\n    return 'Film';\n  }\n  return categoriesFilm.join(', ');\n}\n\nif (window.location.href.includes('my-library.html')) {\n  if (favorite.length > 0) {\n    librarySection.classList.remove('display-hidden');\n    markupFilm(favorite);\n  } else {\n    errorSectoin.classList.remove('display-hidden');\n  }\n}\n","function round(number, digits) {\n  return Math.round(number * digits) / digits;\n}\n\nconst getRandomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nfunction renderStars(element, rating) {\n  return (element.innerHTML = `\n    <div class=\"film_rating\" style=\"--rating:${\n      rating / 2\n    };\" aria-label=\"Rating of this film is ${Math.round(\n    rating / 2\n  )} out of 5.\"></div>\n`);\n}\n\nexport { round, getRandomNumber, renderStars };\n","export class MovieLibrary {\n  constructor() {\n    this.library = [];\n    this.loadLibraryFromLocalStorage();\n  }\n\n  loadLibraryFromLocalStorage() {\n    const libraryJSON = localStorage.getItem('favorite');\n    this.library = libraryJSON ? JSON.parse(libraryJSON) : [];\n  }\n\n  saveLibraryToLocalStorage() {\n    localStorage.setItem('favorite', JSON.stringify(this.library));\n  }\n\n  isFilmInLibrary(id) {\n    return this.library.some(libraryFilm => libraryFilm.id == id);\n  }\n\n  addFilmToLibrary(film) {\n    this.library.push(film);\n    this.saveLibraryToLocalStorage();\n  }\n\n  removeFilmFromLibrary(film) {\n    const index = this.library.findIndex(\n      libraryFilm => libraryFilm.id === film.id\n    );\n    if (index !== -1) {\n      this.library.splice(index, 1);\n      this.saveLibraryToLocalStorage();\n    }\n  }\n}\n"],"names":["$dK6vY","parcelRequire","$bdb2a9ec425da367$var$list","document","querySelector","$bdb2a9ec425da367$var$librarySection","$bdb2a9ec425da367$var$errorSectoin","$bdb2a9ec425da367$var$movieLibrary","$h3giK","MovieLibrary","loadLibraryFromLocalStorage","$bdb2a9ec425da367$var$favorite","library","$bdb2a9ec425da367$export$f277672e8b84b234","favorite1","markup","map","poster_path","original_name","original_title","genres","release_date","vote_average","first_air_date","id","url","year","split","$bdb2a9ec425da367$var$yearsFilm","genreIds","categoriesFilm","genre","name","length","slice","join","$bdb2a9ec425da367$var$categoriesFilms","$9Wu9X","round","innerHTML","getGenres","then","res","forEach","categories","catch","Error","window","location","href","includes","classList","remove","$73d0ece61bfba828$export$2077e0241d6afd3c","number","digits","Math","$73d0ece61bfba828$export$eab19c48dcb6310d","min","max","floor","random","$73d0ece61bfba828$export$6b958f153b36132a","element","rating","$c69f5c99a1f5378f$export$a77202e529bf9901","constructor","this","libraryJSON","localStorage","getItem","JSON","parse","saveLibraryToLocalStorage","setItem","stringify","isFilmInLibrary","some","libraryFilm","addFilmToLibrary","film","push","removeFilmFromLibrary","index","findIndex","splice"],"version":3,"file":"favorite.b8c6ba48.js.map"}