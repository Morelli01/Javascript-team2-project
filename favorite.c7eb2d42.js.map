{"mappings":"2MAAA,IAAAA,EAAAC,EAAA,SAEA,MAEMC,EAAOC,SAASC,cAAc,qBAC9BC,EAAiBF,SAASC,cAAc,oBACxCE,EAAeH,SAASC,cAAc,kBACtCG,EAAWC,KAAKC,MAAMC,aAAaC,QALpB,cAK8C,IAEnE,EAAAX,EAAAY,aACGC,MAAKC,IACJA,EAAIC,SAAQ,EAACC,GAAEA,EAAEC,KAAEA,MACjBC,WAAWF,GAAMC,CAAI,GACrB,IAEHE,MAAMC,OAoELb,EAASc,OAAS,GACpBhB,EAAeiB,UAAUC,OAAO,kBAnElC,SAAoBC,GAClB,MAAMC,EAASD,EACZE,KACC,EAACC,YACCA,EAAWC,cACXA,EAAaC,eACbA,EAAcC,UACdA,EAASC,aACTA,EAAYC,aACZA,EAAYC,eACZA,EAAcjB,GACdA,MAEA,IAAIkB,EAAMP,EACN,sCAAsCA,IACtC,4DACJ,MAAMQ,EAmBd,SAAmBJ,EAAcE,GAO/B,YAL0B,IAAjBF,EACHA,EAAaK,MAAM,KAAK,QACE,IAAnBH,EACPA,EAAeG,MAAM,KAAK,GAC1B,E,CAzBaC,CAAUN,EAAcE,GAErC,MAAO,6CAA6CjB,kBAChDkB,WAAaN,GAAiBC,oJAIPD,GAAiBC,2CAsBpD,SAAyBS,GACvB,IAAIC,EAAiB,GAcrB,YAbwB,IAAbD,IACTC,EAAiBD,EACdE,QAAOC,QAA0B,IAAVA,IACvBf,KAAIe,GACEvB,WAAWuB,GAGTvB,WAAWuB,GAFT,UAKXF,EAAelB,OAAS,IAC1BkB,EAAiBA,EAAeG,MAAM,EAAG,IAEb,IAA1BH,EAAelB,OACV,OAEFkB,EAAeI,KAAK,K,CA9CTC,CAAgBd,QAOUK,yCACbH,gCAG3B,IAGDW,KAAK,IACRzC,EAAK2C,UAAYpB,C,CAoCjBqB,CAAWvC,IAEXD,EAAagB,UAAUC,OAAO,iB","sources":["src/javascript/favorite.js"],"sourcesContent":["import { getGenres } from './api';\n\nconst KEY_FAVORITE = 'favorite';\n\nconst list = document.querySelector('.search_film_list');\nconst librarySection = document.querySelector('.library-section');\nconst errorSectoin = document.querySelector('.error-section');\nconst favorite = JSON.parse(localStorage.getItem(KEY_FAVORITE)) ?? [];\n\ngetGenres()\n  .then(res => {\n    res.forEach(({ id, name }) => {\n      categories[id] = name;\n    });\n  })\n  .catch(Error);\n\nfunction markupFilm(favorite) {\n  const markup = favorite\n    .map(\n      ({\n        poster_path,\n        original_name,\n        original_title,\n        genre_ids,\n        release_date,\n        vote_average,\n        first_air_date,\n        id,\n      }) => {\n        let url = poster_path\n          ? `https://image.tmdb.org/t/p/original${poster_path}`\n          : 'https://www.tgv.com.my/assets/images/404/movie-poster.jpg';\n        const year = yearsFilm(release_date, first_air_date);\n        let genre = categoriesFilms(genre_ids);\n        return `<li class=\"search_film_img_wrap\" data-id='${id}'>\n<img src=\"${url}\" alt=\"${original_name || original_title}\"\n  width=\"395\" height=\"574\" class=\"search_film_img\"/>\n<div class=\"wrap\">\n  <div class=\"search_film_wrap\">\n    <p class=\"search_film_title\">${original_name || original_title}</p>\n    <p class=\"search_film_genre\">${genre} | ${year}</p>\n    <p class=\"stars is-hidden\">${vote_average}</p>\n  </div>\n</div>\n</li>`;\n      }\n    )\n    .join('');\n  list.innerHTML = markup;\n}\n\nfunction yearsFilm(release_date, first_air_date) {\n  const year =\n    typeof release_date !== 'undefined'\n      ? release_date.split('-')[0]\n      : typeof first_air_date !== 'undefined'\n      ? first_air_date.split('-')[0]\n      : '';\n  return year;\n}\n\nfunction categoriesFilms(genreIds) {\n  let categoriesFilm = [];\n  if (typeof genreIds !== 'undefined') {\n    categoriesFilm = genreIds\n      .filter(genre => typeof genre !== 'undefined')\n      .map(genre => {\n        if (!categories[genre]) {\n          return 'Film';\n        }\n        return categories[genre];\n      });\n  }\n  if (categoriesFilm.length > 2) {\n    categoriesFilm = categoriesFilm.slice(0, 2);\n  }\n  if (categoriesFilm.length === 0) {\n    return 'Film';\n  }\n  return categoriesFilm.join(', ');\n}\n\nif (favorite.length > 0) {\n  librarySection.classList.remove('display-hidden');\n  markupFilm(favorite);\n} else {\n  errorSectoin.classList.remove('display-hidden');\n}\n"],"names":["$dK6vY","parcelRequire","$bdb2a9ec425da367$var$list","document","querySelector","$bdb2a9ec425da367$var$librarySection","$bdb2a9ec425da367$var$errorSectoin","$bdb2a9ec425da367$var$favorite","JSON","parse","localStorage","getItem","getGenres","then","res","forEach","id","name","categories","catch","Error","length","classList","remove","favorite1","markup","map","poster_path","original_name","original_title","genre_ids","release_date","vote_average","first_air_date","url","year","split","$bdb2a9ec425da367$var$yearsFilm","genreIds","categoriesFilm","filter","genre","slice","join","$bdb2a9ec425da367$var$categoriesFilms","innerHTML","$bdb2a9ec425da367$var$markupFilm"],"version":3,"file":"favorite.c7eb2d42.js.map"}