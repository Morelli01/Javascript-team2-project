{"mappings":"mWAAA,IAAAA,EAAAC,EAAA,S,oDAICC,EAAAF,EAAA,CAAAE,EAAAC,GAAAC,MAAA,SAAAC,I,IACOC,EAIAC,EAEAC,EAEAC,EACFC,EAMGC,EAAAC,EAAAC,EAHCC,EAGDC,EAAAC,EAAMC,E,qEAfPX,EAAeY,SAASC,cAAc,uBAC3B,C,uDAEjB,EAAAC,EAAAC,gB,UACoB,EAAAC,EAAAC,UAAS,G,cAAvBhB,EAAKiB,EAAAC,KAELjB,EAAWD,EAAMmB,QAAQC,MAAM,EAAG,G,WAEnB,EAAAL,EAAAM,a,WAAfnB,EAAMe,EAAAC,KACRf,EAAe,GAMZC,GAAU,EAAVC,GAAU,EAAVC,OAAUgB,IAJbC,OAAOC,YAAc,KAAG,C,uBACpBjB,EAAON,EAAS,G,UACDwB,EAAiBlB,EAAML,G,QAA5CC,EAAYc,EAAAC,K,kCAEPV,EAAcP,EAAQyB,OAAAC,Y,WAAtBvB,GAAAK,EAAAD,EAAUoB,QAAAC,KAAA,C,uBAAJnB,EAAND,EAAUqB,M,KACb3B,E,UAAsBsB,EAAiBf,EAAMR,G,QAA7CC,EAAYc,EAAAc,IAAAd,EAAAC,K,QADTd,GAAU,E,2EAAVC,GAAU,EAAVC,EAAUW,EAAAe,G,4BAAV5B,GAAU,MAAVI,EAAUyB,QAAVzB,EAAUyB,S,sBAAV5B,EAAU,C,sBAAVC,E,gEAIPP,EAAamC,UAAY/B,GAEzB,EAAAU,EAAAsB,e,4EAtBD,GAyBD,I,EAAMV,G,EAAmB9B,EAAAF,EAAA,CAAAE,EAAAC,GAAAC,MAAA,SAAAC,EAAOS,EAAML,G,IAE9BkC,EACAC,EACAC,EACAC,EACAC,EAEAC,E,yEANAL,EADU,kDACW7B,EAAKmC,cAC1BL,EAAQ9B,EAAKoC,eACbL,EAAc/B,EAAKqC,aAAaC,MAAM,KAAK,GAC3CN,EAAchC,EAAKuC,aACnBN,EAAMjC,EAAK8B,MAEXI,EAAavC,EAChB6C,QAAO,SAACC,G,OAAUzC,EAAK0C,UAAU7B,MAAM,EAAG,GAAG8B,SAASF,EAAMG,G,IAC5DC,KAAI,SAAAC,G,OAAOA,EAAJC,I,IACPC,KAAK,M,kBAED,+DAC+BC,OADgCjD,EAAK4C,GAAG,8CACtBK,OAAlBpB,EAAS,WAGZoB,OAHqBhB,EAAI,+HAKnBgB,OAFNnB,EAAM,gGAE6CmB,OAA7Cf,EAAW,oCAEIe,OAF8BlB,EAAY,kHAEckB,OAAxDjB,EAAc,EAAE,0CAAqEiB,QAA7B,EAAAC,EAAAC,OAAOnB,EAAc,EAAI,IAAI,8G,oDArB/GhC,EAAML,G,iCA+BhCyD,EAAahD,SAASC,cAAc,oBACtC+C,GACFA,EAAWC,iBAAiB,SAAS,WACnCrC,OAAOsC,SAASC,KAAO,6D,yCC/D3B,SAASC,EAAMC,EAAQC,GACrB,OAAOC,KAAKR,MAAMM,EAASC,GAAUA,C,qJAGvC,IAAME,EAAkB,SAACC,EAAKC,GAC5B,OAAOH,KAAKI,MAAMJ,KAAKK,UAAYF,EAAMD,EAAM,IAAMA,C,EAGvD,SAASI,EAAYC,EAASC,GAC5B,OAAQD,EAAQvC,UAAY,kDAGesB,OADvCkB,EAAS,EACV,0CAEDlB,OAFyCU,KAAKR,MAC9CgB,EAAS,GACT,uB","sources":["src/javascript/trends.js","src/javascript/utils.js"],"sourcesContent":["import { getFilms, getGenres } from './api';\nimport { spinnerStart, spinnerStop } from './spin';\nimport { round } from './utils';\n\n(async () => {\n  const weeklyTrends = document.querySelector('.weekly_trends_list');\n  if (!weeklyTrends) return;\n\n  spinnerStart();\n  const films = await getFilms(1);\n\n  const topThree = films.results.slice(0, 3);\n\n  const genres = await getGenres();\n  let resultMarkup = '';\n\n  if (window.innerWidth <= 768) {\n    const film = topThree[0];\n    resultMarkup = await createItemMarkup(film, genres);\n  } else {\n    for (const film of topThree) {\n      resultMarkup += await createItemMarkup(film, genres);\n    }\n  }\n  weeklyTrends.innerHTML = resultMarkup;\n\n  spinnerStop();\n})();\n\nconst createItemMarkup = async (film, genres) => {\n  const baseUrl = 'https://image.tmdb.org/t/p/w600_and_h900_bestv2';\n  const imageSrc = baseUrl + film.backdrop_path;\n  const title = film.original_title;\n  const releaseYear = film.release_date.split('-')[0];\n  const voteAverage = film.vote_average;\n  const alt = film.title;\n\n  const filmGenres = genres\n    .filter((genre) => film.genre_ids.slice(0, 2).includes(genre.id))\n    .map(({ name }) => name)\n    .join(', ');\n\n  return `<li class='weekly_trends_list_item list_item' data-film-id='${film.id}'>\n        <img class='movie-image' src='${imageSrc}' alt='${alt}'>\n        <div class='weekly-trends_description'>\n          <div class='flex-wrap'>\n            <h4 class='film_title'>${title}</h4>\n            <div class='flex-wrap-rating'>\n            <h5 class='film_description'>${filmGenres}<span class='separator'>|</span>${releaseYear}</h5>\n            <div class='film_rating-wrapper'>\n              <div class='film_rating' style='--rating: ${voteAverage / 2};' aria-label='Rating of this film is ${round((voteAverage / 2), 10)} out of 5.'></div>\n            </div>\n          </div>\n\n          </div>\n        </div>\n      </li>`;\n};\n\n\nconst seeAllLink = document.querySelector('.link_to_catalog');\nif (seeAllLink) {\n  seeAllLink.addEventListener('click', () => {\n    window.location.href = 'https://www.themoviedb.org/movie/603692-john-wick-chapter-4';\n  });\n}","function round(number, digits) {\n  return Math.round(number * digits) / digits;\n}\n\nconst getRandomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nfunction renderStars(element, rating) {\n  return (element.innerHTML = `\n    <div class=\"film_rating\" style=\"--rating:${\n      rating / 2\n    };\" aria-label=\"Rating of this film is ${Math.round(\n    rating / 2\n  )} out of 5.\"></div>\n`);\n}\n\nexport { round, getRandomNumber, renderStars };\n"],"names":["$bpxeT","parcelRequire","$parcel$interopDefault","$2TvXO","mark","_callee","weeklyTrends","films","topThree","genres","resultMarkup","_iteratorNormalCompletion","_didIteratorError","_iteratorError","film","_iterator","_step","film1","document","querySelector","$dBKQr","spinnerStart","$8LhE9","getFilms","_ctx","sent","results","slice","getGenres","undefined","window","innerWidth","$e444f4c5cdaffc6a$var$createItemMarkup","Symbol","iterator","next","done","value","t0","t1","return","innerHTML","spinnerStop","imageSrc","title","releaseYear","voteAverage","alt","filmGenres","backdrop_path","original_title","release_date","split","vote_average","filter","genre","genre_ids","includes","id","map","param","name","join","concat","$3RRSf","round","$e444f4c5cdaffc6a$var$seeAllLink","addEventListener","location","href","$2d101c92898a7d81$export$2077e0241d6afd3c","number","digits","Math","$2d101c92898a7d81$export$eab19c48dcb6310d","min","max","floor","random","$2d101c92898a7d81$export$6b958f153b36132a","element","rating"],"version":3,"file":"trends.fc2fbd73.js.map"}