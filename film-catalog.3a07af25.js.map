{"mappings":"A,I,E,A,C,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,C,E,kB,E,S,Q,S,C,C,C,ECAA,a,I,E,E,S,E,E,SAIA,IAAM,EAAO,CACT,KAAM,SAAS,cAAc,qBAC7B,QAAS,SAAS,cAAc,sBAChC,cAAe,SAAS,eAAe,cACvC,KAAM,SAAS,eAAe,QAC9B,SAAU,SAAS,cAAc,cACjC,MAAO,SAAS,cAAc,WAC9B,mBAAoB,SAAS,cAAc,kBAC7C,EAEI,EAAa,CAAC,EACd,EAAc,EACd,EAAc,GAgBlB,SAAS,EAAW,CAAI,EACtB,IAAM,EAAS,EACZ,IACC,CAAC,CAAA,YACC,CAAA,CAAW,cACX,CAAA,CAAa,eACb,CAAA,CAAc,UACd,CAAA,CAAS,aACT,CAAA,CAAY,aACZ,CAAA,CAAY,eACZ,CAAA,CACD,IACC,IAwBF,EAxBM,EAAM,EACN,CAAC,mCAAmC,EAAE,EAAY,CAAC,CACnD,4DACE,EAAO,AAyCrB,SAAmB,CAAY,CAAE,CAAc,EAC7C,IAAM,EACJ,AAAwB,KAAA,IAAjB,EACH,EAAa,MAAM,IAAI,CAAC,EAAE,CAC1B,AAA0B,KAAA,IAAnB,EACP,EAAe,MAAM,IAAI,CAAC,EAAE,CAC5B,GACN,OAAO,CACT,EAjD+B,EAAc,GAErC,MAAO,CAAC;YACN,EAAE,EAAI,OAAO,EAAE,GAAiB,EAAe;;;;mCAIxB,EAAE,GAAiB,EAAe;mCAClC,EAa3B,EAAiB,EAAE,CAcvB,CAbwB,KAAA,IArBU,GAsBhC,CAAA,EAAiB,AAtBe,EAuB7B,OAAO,AAAA,GAAS,AAAiB,KAAA,IAAV,GACvB,IAAI,AAAA,GACH,AAAK,CAAU,CAAC,EAAM,CAGf,CAAU,CAAC,EAAM,CAFf,OAGX,EAEA,EAAe,OAAS,GAC1B,CAAA,EAAiB,EAAe,MAAM,EAAG,EAD3C,EAGI,AAA0B,IAA1B,EAAe,QACV,OAEF,EAAe,KAAK,MA9BY,GAAG,EAAE,EAAK;iCACpB,EAAE,EAAa;;;;OAIzC,CAAC,AACA,GAED,KAAK,GACR,CAAA,EAAK,KAAK,UAAY,CACxB,CAmCA,eAAe,EAAS,CAAE,EACxB,EAAG,iBACH,EAAc,EACd,EAAc,EAAG,cAAc,SAAS,UAAU,MAAM,OACxD,EAAK,cAAc,UAAU,IAAI,kBACjC,EAAK,mBAAmB,UAAU,IAAI,kBAElC,EAAY,QAAU,GACxB,EAAK,SAAS,UAAU,OAAO,aAGjC,IAAM,EAAW,MAAM,AAAA,CAAA,EAAA,EAAA,kBAAA,EAAmB,EAAa,EACvD,CAAA,EAAK,KAAK,UAAY,GAEtB,EAAW,EAAS,SACpB,AA8BF,SAA+B,CAAQ,EACrC,GAAI,EAAS,cAAgB,GAAI,CAC/B,EAAK,cAAc,UAAU,OAAO,kBAEpC,IAAM,EAAa,AAAA,CAAA,EAAA,EAAA,gBAAA,EACjB,EAAS,cACT,EAAS,aAGX,EAAW,GAAG,YAAa,AAAA,IACzB,EAAc,EAAM,KACpB,AAAA,CAAA,EAAA,EAAA,kBAAA,EAAmB,EAAa,GAC7B,KAAK,AAAA,IACJ,EAAW,EAAK,SAChB,OAAO,SAAS,CACd,IAAK,IACL,SAAU,QACZ,EACF,GACC,MAAM,AAAA,IACL,QAAQ,MAAM,SAAU,EAC1B,EACJ,EACF,CACF,EAtDwB,GAyDS,IAA3B,AAxDe,EAwDN,eACX,EAAK,mBAAmB,UAAU,OAAO,iBAxD7C,CAlGA,AAAA,CAAA,EAAA,EAAA,SAAA,IACG,KAAK,AAAA,IACJ,EAAI,QAAQ,CAAC,CAAA,GAAE,CAAA,CAAE,KAAE,CAAA,CAAM,IACvB,CAAU,CAAC,EAAG,CAAG,CACnB,GACO,AAAA,CAAA,EAAA,EAAA,QAAA,EAAS,KAEjB,KAAK,AAAA,IACJ,EAAW,EAAe,SAC1B,AA2FJ,SAA6B,CAAQ,EACnC,GAAI,EAAS,cAAgB,GAAI,CAC/B,EAAK,cAAc,UAAU,OAAO,kBAEpC,IAAM,EAAa,AAAA,CAAA,EAAA,EAAA,gBAAA,EACjB,EAAS,cACT,EAAS,aAGX,EAAW,GAAG,YAAa,AAAA,IACzB,EAAc,EAAM,KACpB,AAAA,CAAA,EAAA,EAAA,QAAA,EAAS,GACN,KAAK,AAAA,IACJ,EAAW,EAAK,SAChB,OAAO,SAAS,CACd,IAAK,IACL,SAAU,QACZ,EACF,GACC,MAAM,AAAA,IACL,QAAQ,MAAM,SAAU,EAC1B,EACJ,EACF,CACF,EAnHwB,EACtB,GACC,MAwJH,SAAe,CAAG,EAChB,QAAQ,IAAI,EACd,GAtFA,EAAK,KAAK,iBAAiB,SAAU,GA+ErC,EAAK,SAAS,iBAAiB,QAAS,KACtC,EAAK,SAAS,UAAU,IAAI,aAC5B,EAAK,KAAK,OACZ,E","sources":["<anon>","src/javascript/film-catalog.js"],"sourcesContent":["var $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\nparcelRequire.register(\"lklxg\", function(module, exports) {\n\nvar $dK6vY = parcelRequire(\"dK6vY\");\n\nvar $3u1GM = parcelRequire(\"3u1GM\");\n\"use strict\";\nconst $f86c2bb9432d860c$var$refs = {\n    ulEl: document.querySelector(\".search_film_list\"),\n    inputEl: document.querySelector(\".search_film_input\"),\n    divPagination: document.getElementById(\"pagination\"),\n    form: document.getElementById(\"form\"),\n    btnReset: document.querySelector(\".btn_reset\"),\n    toTop: document.querySelector(\".to_top\"),\n    falseResultMessage: document.querySelector(\".cards__message\")\n};\nlet $f86c2bb9432d860c$var$categories = {};\nlet $f86c2bb9432d860c$var$currentPage = 1;\nlet $f86c2bb9432d860c$var$searchQuery = \"\";\n(0, $dK6vY.getGenres)().then((res)=>{\n    res.forEach(({ id: id , name: name  })=>{\n        $f86c2bb9432d860c$var$categories[id] = name;\n    });\n    return (0, $dK6vY.getFilms)($f86c2bb9432d860c$var$currentPage);\n}).then((categoriesData)=>{\n    $f86c2bb9432d860c$var$markupFilm(categoriesData.results);\n    $f86c2bb9432d860c$var$paginationTrendWeek(categoriesData);\n}).catch($f86c2bb9432d860c$var$Error);\nfunction $f86c2bb9432d860c$var$markupFilm(data) {\n    const markup = data.map(({ poster_path: poster_path , original_name: original_name , original_title: original_title , genre_ids: genre_ids , release_date: release_date , vote_average: vote_average , first_air_date: first_air_date  })=>{\n        let url = poster_path ? `https://image.tmdb.org/t/p/original${poster_path}` : \"https://www.tgv.com.my/assets/images/404/movie-poster.jpg\";\n        const year = $f86c2bb9432d860c$var$yearsFilm(release_date, first_air_date);\n        let genre = $f86c2bb9432d860c$var$categoriesFilms(genre_ids);\n        return `<li class=\"search_film_img_wrap\">\n  <img src=\"${url}\" alt=\"${original_name || original_title}\"\n    width=\"395\" height=\"574\" class=\"search_film_img\"/>\n  <div class=\"wrap\">\n    <div class=\"search_film_wrap\">\n      <p class=\"search_film_title\">${original_name || original_title}</p>\n      <p class=\"search_film_genre\">${genre} | ${year}</p>\n      <p class=\"stars is-hidden\">${vote_average}</p>\n    </div>\n  \n  </div>\n  </li>`;\n    }).join(\"\");\n    $f86c2bb9432d860c$var$refs.ulEl.innerHTML = markup;\n}\nfunction $f86c2bb9432d860c$var$categoriesFilms(genreIds) {\n    let categoriesFilm = [];\n    if (typeof genreIds !== \"undefined\") categoriesFilm = genreIds.filter((genre)=>typeof genre !== \"undefined\").map((genre)=>{\n        if (!$f86c2bb9432d860c$var$categories[genre]) return \"Film\";\n        return $f86c2bb9432d860c$var$categories[genre];\n    });\n    if (categoriesFilm.length > 2) categoriesFilm = categoriesFilm.slice(0, 2);\n    if (categoriesFilm.length === 0) return \"Film\";\n    return categoriesFilm.join(\", \");\n}\nfunction $f86c2bb9432d860c$var$yearsFilm(release_date, first_air_date) {\n    const year = typeof release_date !== \"undefined\" ? release_date.split(\"-\")[0] : typeof first_air_date !== \"undefined\" ? first_air_date.split(\"-\")[0] : \"\";\n    return year;\n}\n$f86c2bb9432d860c$var$refs.form.addEventListener(\"submit\", $f86c2bb9432d860c$var$onSubmit);\nasync function $f86c2bb9432d860c$var$onSubmit(ev) {\n    ev.preventDefault();\n    $f86c2bb9432d860c$var$currentPage = 1;\n    $f86c2bb9432d860c$var$searchQuery = ev.currentTarget.elements.film_name.value.trim();\n    $f86c2bb9432d860c$var$refs.divPagination.classList.add(\"display-hidden\");\n    $f86c2bb9432d860c$var$refs.falseResultMessage.classList.add(\"display-hidden\");\n    if ($f86c2bb9432d860c$var$searchQuery.length >= 1) $f86c2bb9432d860c$var$refs.btnReset.classList.remove(\"is-hidden\");\n    const response = await (0, $dK6vY.getCategoriesQuery)($f86c2bb9432d860c$var$searchQuery, $f86c2bb9432d860c$var$currentPage);\n    $f86c2bb9432d860c$var$refs.ulEl.innerHTML = \"\";\n    $f86c2bb9432d860c$var$markupFilm(response.results);\n    $f86c2bb9432d860c$var$paginationSearchFilms(response);\n    $f86c2bb9432d860c$var$addFalseResultText(response);\n}\nfunction $f86c2bb9432d860c$var$paginationTrendWeek(response) {\n    if (response.total_results > 20) {\n        $f86c2bb9432d860c$var$refs.divPagination.classList.remove(\"display-hidden\");\n        const pagination = (0, $3u1GM.createPagination)(response.total_results, response.total_pages);\n        pagination.on(\"afterMove\", (event)=>{\n            $f86c2bb9432d860c$var$currentPage = event.page;\n            (0, $dK6vY.getFilms)($f86c2bb9432d860c$var$currentPage).then((data)=>{\n                $f86c2bb9432d860c$var$markupFilm(data.results);\n                window.scrollTo({\n                    top: 450,\n                    behavior: \"smooth\"\n                });\n            }).catch((error)=>{\n                console.error(\"Error:\", error);\n            });\n        });\n    }\n}\nfunction $f86c2bb9432d860c$var$paginationSearchFilms(response) {\n    if (response.total_results > 20) {\n        $f86c2bb9432d860c$var$refs.divPagination.classList.remove(\"display-hidden\");\n        const pagination = (0, $3u1GM.createPagination)(response.total_results, response.total_pages);\n        pagination.on(\"afterMove\", (event)=>{\n            $f86c2bb9432d860c$var$currentPage = event.page;\n            (0, $dK6vY.getCategoriesQuery)($f86c2bb9432d860c$var$searchQuery, $f86c2bb9432d860c$var$currentPage).then((data)=>{\n                $f86c2bb9432d860c$var$markupFilm(data.results);\n                window.scrollTo({\n                    top: 450,\n                    behavior: \"smooth\"\n                });\n            }).catch((error)=>{\n                console.error(\"Error:\", error);\n            });\n        });\n    }\n}\nfunction $f86c2bb9432d860c$var$addFalseResultText(response) {\n    if (response.total_results === 0) $f86c2bb9432d860c$var$refs.falseResultMessage.classList.remove(\"display-hidden\");\n}\n$f86c2bb9432d860c$var$refs.btnReset.addEventListener(\"click\", ()=>{\n    $f86c2bb9432d860c$var$refs.btnReset.classList.add(\"is-hidden\");\n    $f86c2bb9432d860c$var$refs.form.reset();\n});\nfunction $f86c2bb9432d860c$var$Error(err) {\n    console.log(err);\n}\n\n});\n\n\n//# sourceMappingURL=film-catalog.3a07af25.js.map\n","'use strict';\nimport { getFilms, getGenres, getCategoriesQuery } from './api';\nimport { createPagination } from './pagination';\n\nconst refs = {\n    ulEl: document.querySelector('.search_film_list'),\n    inputEl: document.querySelector('.search_film_input'),\n    divPagination: document.getElementById('pagination'),\n    form: document.getElementById('form'),\n    btnReset: document.querySelector('.btn_reset'),\n    toTop: document.querySelector('.to_top'),\n    falseResultMessage: document.querySelector('.cards__message'),\n  };\n  \n  let categories = {};\n  let currentPage = 1;\n  let searchQuery = '';\n  \n  \n  getGenres()\n    .then(res => {\n      res.forEach(({ id, name }) => {\n        categories[id] = name;\n      });\n      return getFilms(currentPage);\n    })\n    .then(categoriesData => {\n      markupFilm(categoriesData.results);\n      paginationTrendWeek(categoriesData);\n    })\n    .catch(Error);\n  \n  function markupFilm(data) {\n    const markup = data\n      .map(\n        ({\n          poster_path,\n          original_name,\n          original_title,\n          genre_ids,\n          release_date,\n          vote_average,\n          first_air_date,\n        }) => {\n          let url = poster_path\n            ? `https://image.tmdb.org/t/p/original${poster_path}`\n            : 'https://www.tgv.com.my/assets/images/404/movie-poster.jpg';\n          const year = yearsFilm(release_date, first_air_date);\n          let genre = categoriesFilms(genre_ids);\n          return `<li class=\"search_film_img_wrap\">\n  <img src=\"${url}\" alt=\"${original_name || original_title}\"\n    width=\"395\" height=\"574\" class=\"search_film_img\"/>\n  <div class=\"wrap\">\n    <div class=\"search_film_wrap\">\n      <p class=\"search_film_title\">${original_name || original_title}</p>\n      <p class=\"search_film_genre\">${genre} | ${year}</p>\n      <p class=\"stars is-hidden\">${vote_average}</p>\n    </div>\n  \n  </div>\n  </li>`;\n        }\n      )\n      .join('');\n    refs.ulEl.innerHTML = markup;\n  }\n  \n  function categoriesFilms(genreIds) {\n    let categoriesFilm = [];\n    if (typeof genreIds !== 'undefined') {\n      categoriesFilm = genreIds\n        .filter(genre => typeof genre !== 'undefined')\n        .map(genre => {\n          if (!categories[genre]) {\n            return 'Film';\n          }\n          return categories[genre];\n        });\n    }\n    if (categoriesFilm.length > 2) {\n      categoriesFilm = categoriesFilm.slice(0, 2);\n    }\n    if (categoriesFilm.length === 0) {\n      return 'Film';\n    }\n    return categoriesFilm.join(', ');\n  }\n  \n  function yearsFilm(release_date, first_air_date) {\n    const year =\n      typeof release_date !== 'undefined'\n        ? release_date.split('-')[0]\n        : typeof first_air_date !== 'undefined'\n        ? first_air_date.split('-')[0]\n        : '';\n    return year;\n  }\n  \n  refs.form.addEventListener('submit', onSubmit);\n  \n  async function onSubmit(ev) {\n    ev.preventDefault();\n    currentPage = 1;\n    searchQuery = ev.currentTarget.elements.film_name.value.trim();\n    refs.divPagination.classList.add('display-hidden');\n    refs.falseResultMessage.classList.add('display-hidden');\n  \n    if (searchQuery.length >= 1) {\n      refs.btnReset.classList.remove('is-hidden');\n    }\n  \n    const response = await getCategoriesQuery(searchQuery, currentPage);\n    refs.ulEl.innerHTML = '';\n  \n    markupFilm(response.results);\n    paginationSearchFilms(response);\n    addFalseResultText(response);\n  }\n  \n  function paginationTrendWeek(response) {\n    if (response.total_results > 20) {\n      refs.divPagination.classList.remove('display-hidden');\n  \n      const pagination = createPagination(\n        response.total_results,\n        response.total_pages\n      );\n  \n      pagination.on('afterMove', event => {\n        currentPage = event.page;\n        getFilms(currentPage)\n          .then(data => {\n            markupFilm(data.results);\n            window.scrollTo({\n              top: 450,\n              behavior: 'smooth',\n            });\n          })\n          .catch(error => {\n            console.error('Error:', error);\n          });\n      });\n    }\n  }\n  \n  function paginationSearchFilms(response) {\n    if (response.total_results > 20) {\n      refs.divPagination.classList.remove('display-hidden');\n  \n      const pagination = createPagination(\n        response.total_results,\n        response.total_pages\n      );\n  \n      pagination.on('afterMove', event => {\n        currentPage = event.page;\n        getCategoriesQuery(searchQuery, currentPage)\n          .then(data => {\n            markupFilm(data.results);\n            window.scrollTo({\n              top: 450,\n              behavior: 'smooth',\n            });\n          })\n          .catch(error => {\n            console.error('Error:', error);\n          });\n      });\n    }\n  }\n  \n  function addFalseResultText(response) {\n    if (response.total_results === 0) {\n      refs.falseResultMessage.classList.remove('display-hidden');\n    }\n  }\n  \n  refs.btnReset.addEventListener('click', () => {\n    refs.btnReset.classList.add('is-hidden');\n    refs.form.reset();\n  });\n  \n  function Error(err) {\n    console.log(err);\n  }\n  "],"names":["parcelRequire","$parcel$global","globalThis","self","window","global","register","module","exports","$dK6vY","$3u1GM","$f86c2bb9432d860c$var$refs","ulEl","document","querySelector","inputEl","divPagination","getElementById","form","btnReset","toTop","falseResultMessage","$f86c2bb9432d860c$var$categories","$f86c2bb9432d860c$var$currentPage","$f86c2bb9432d860c$var$searchQuery","$f86c2bb9432d860c$var$markupFilm","data","markup","map","poster_path","original_name","original_title","genre_ids","release_date","vote_average","first_air_date","categoriesFilm","url","year","$f86c2bb9432d860c$var$yearsFilm","split","genreIds","filter","genre","length","slice","join","innerHTML","$f86c2bb9432d860c$var$onSubmit","ev","preventDefault","currentTarget","elements","film_name","value","trim","classList","add","remove","response","getCategoriesQuery","results","$f86c2bb9432d860c$var$paginationSearchFilms","total_results","pagination","createPagination","total_pages","on","event","page","then","scrollTo","top","behavior","catch","error","console","getGenres","res","forEach","id","name","getFilms","categoriesData","$f86c2bb9432d860c$var$paginationTrendWeek","err","log","addEventListener","reset"],"version":3,"file":"film-catalog.3a07af25.js.map"}