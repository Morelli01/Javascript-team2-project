{"mappings":"sSAAA,IAAAA,EAAAC,EAAA,S,uCAKA,IAAIC,EAAc,KAEjB,WACC,MAAMC,EAAmBC,SAASC,cAAc,uBAChD,IAAKF,EAAkB,QAEvB,EAAAG,EAAAC,gBACA,MAAMC,QAAa,EAAAR,EAAAS,wBACnBP,EAAcM,EACd,MAAME,QAAiB,EAAAV,EAAAW,iBAAgBH,EAAKI,IAEtCC,QAAe,EAAAb,EAAAc,aAGjBX,IACFA,EAAiBY,UAAYC,EAAaR,EAAMK,IAGhCT,SAASC,cAAc,0BAC/BY,iBAAiB,SAASC,MAAMC,IACxC,MAAMC,EAAe,IAAI,EAAAC,EAAAC,cACnBC,EAAcH,EAAaI,gBAAgBL,EAAMM,OAAOC,QAAQd,IAChEe,EAASvB,SAASC,cAAc,0BAClCkB,GACFK,QAAQC,IAAI,YACZT,EAAaU,sBAAsBpB,KAEnCkB,QAAQC,IAAI,UACZT,EAAaW,iBAAiBrB,IAEhCiB,EAAOK,YAAcT,EACjB,oBACA,wBAAwB,KAE9B,EAAAjB,EAAA2B,cACD,EAjCA,GAmCD,MAAMjB,EAAe,CAACR,EAAMK,KAC1B,MAIMqB,GAHJC,OAAOC,YAAc,IACjB,kDACA,oDACqB5B,EAAK6B,YAC1BC,EAAW9B,EAAK8B,SAChBC,EAAQ/B,EAAKgC,eAEbC,EAAc,IAAIC,KAAKlC,EAAKmC,cAK5BC,EAAuB,GAJjBH,EAAYI,UAAUC,WAAWC,SAAS,EAAG,SAC1CN,EAAYO,WAAa,GAAGF,WAAWC,SAAS,EAAG,QACrDN,EAAYQ,gBAKnB1B,GADe,IAAI,EAAAF,EAAAC,eACQE,gBAAgBhB,EAAKI,IAEhDsC,EAAc1C,EAAK2C,aACnBC,EAAY5C,EAAK6C,WACjBC,EAAa9C,EAAK8C,WAClBC,EAAM/C,EAAK+B,MACXiB,EAAa3C,EAChB4C,QAAOC,GAASlD,EAAKmD,UAAUC,MAAM,EAAG,GAAGC,SAASH,EAAM9C,MAC1DkD,KAAI,EAACC,KAAEA,KAAWA,IAClBC,KAAK,MACR,MAAO,oFAEkC9B,WAAkBqB,yHAIfhB,0PAKyBK,2OAK5BM,6GAEAE,iOAKkB,EAAAa,EAAAC,OAC/CZ,EACA,wMAK+CE,kMAKTlB,mIAGc9B,EAAKI,mBAC3DW,EAAc,yBAA2B,4EAIlD,C,sCChHH,SAAS4C,EAAMC,EAAQC,GACrB,OAAOC,KAAKJ,MAAME,EAASC,GAAUA,C,qJAGvC,MAAME,EAAkB,CAACC,EAAKC,IACrBH,KAAKI,MAAMJ,KAAKK,UAAYF,EAAMD,EAAM,IAAMA,EAGvD,SAASI,EAAYC,EAASC,GAC5B,OAAQD,EAAQ9D,UAAY,kDAExB+D,EAAS,0CAC8BR,KAAKJ,MAC9CY,EAAS,wB,0FCbN,MAAMC,EACXC,cACEC,KAAKC,QAAU,GACfD,KAAKE,6B,CAGPA,8BACE,MAAMC,EAAcC,aAAaC,QAAQ,YACzCL,KAAKC,QAAUE,EAAcG,KAAKC,MAAMJ,GAAe,E,CAGzDK,4BACEJ,aAAaK,QAAQ,WAAYH,KAAKI,UAAUV,KAAKC,S,CAGvD1D,gBAAgBZ,GACd,OAAOqE,KAAKC,QAAQU,MAAKC,GAAeA,EAAYjF,IAAMA,G,CAG5DmB,iBAAiBvB,GACfyE,KAAKC,QAAQY,KAAKtF,GAClByE,KAAKQ,2B,CAGP3D,sBAAsBtB,GACpB,MAAMuF,EAAQd,KAAKC,QAAQc,WACzBH,GAAeA,EAAYjF,KAAOJ,EAAKI,MAE3B,IAAVmF,IACFd,KAAKC,QAAQe,OAAOF,EAAO,GAC3Bd,KAAKQ,4B","sources":["src/javascript/film-month.js","src/javascript/utils.js","src/javascript/movie-library.js"],"sourcesContent":["import { getGenres, getRandomFilmOfMonth, getCategoriesId } from './api';\nimport { spinnerStart, spinnerStop } from './spin';\nimport { round } from './utils';\nimport { MovieLibrary } from './movie-library';\n\nlet currentFilm = null;\n\n(async () => {\n  const filmMonthWrapper = document.querySelector('.film-month_wrapper');\n  if (!filmMonthWrapper) return;\n\n  spinnerStart();\n  const film = await getRandomFilmOfMonth();\n  currentFilm = film;\n  const findFilm = await getCategoriesId(film.id);\n\n  const genres = await getGenres();\n  // spinnerStop()\n\n  if (filmMonthWrapper) {\n    filmMonthWrapper.innerHTML = createMarkup(film, genres);\n  }\n\n  const addButton = document.querySelector('.film-month_button-add');\n  addButton.addEventListener('click', async event => {\n    const movieLibrary = new MovieLibrary();\n    const isInLibrary = movieLibrary.isFilmInLibrary(event.target.dataset.id);\n    const button = document.querySelector('.film-month_button-add');\n    if (isInLibrary) {\n      console.log('removing');\n      movieLibrary.removeFilmFromLibrary(findFilm);\n    } else {\n      console.log('adding');\n      movieLibrary.addFilmToLibrary(findFilm);\n    }\n    button.textContent = isInLibrary\n      ? 'Add to my library'\n      : 'Remove from my library';\n  });\n  spinnerStop();\n})();\n\nconst createMarkup = (film, genres) => {\n  const baseUrl =\n    window.innerWidth <= 600\n      ? 'https://image.tmdb.org/t/p/w600_and_h900_bestv2'\n      : 'https://image.tmdb.org/t/p/w1066_and_h600_bestv2';\n  const imageSrc = baseUrl + film.poster_path;\n  const overview = film.overview;\n  const title = film.original_title;\n\n  const releaseDate = new Date(film.release_date);\n  const day = releaseDate.getDate().toString().padStart(2, '0');\n  const month = (releaseDate.getMonth() + 1).toString().padStart(2, '0');\n  const year = releaseDate.getFullYear();\n\n  const formattedReleaseDate = `${day}.${month}.${year}`;\n\n  const movieLibrary = new MovieLibrary();\n  const isInLibrary = movieLibrary.isFilmInLibrary(film.id);\n\n  const voteAverage = film.vote_average;\n  const voteCount = film.vote_count;\n  const popularity = film.popularity;\n  const alt = film.title;\n  const filmGenres = genres\n    .filter(genre => film.genre_ids.slice(0, 2).includes(genre.id))\n    .map(({ name }) => name)\n    .join(', ');\n  return `\n      <div class='film-month_image'>\n        <img class='film-month_img' src='${imageSrc}' alt='${alt}'>\n      </div>\n      <div class='film-month_content'>\n        <div>\n          <h3 class='film-month_info-title'>${title}</h3>\n        </div>\n        <div class='film-month_info'>\n          <div class='film-month_info-item'>\n            <span class='film-month_info-label'>Release date</span>\n            <span class='film-month_info-value film-month_info-year'>${formattedReleaseDate}</span>\n          </div>\n          <div class='film-month_info-item'>\n            <span class='film-month_info-label'>Vote/Votes</span>\n            <span class='film-month_info-value'>\n              <span class='value-number'>${voteAverage}</span>\n               <span class='value-separator'>/</span>\n              <span class='value-number'>${voteCount}</span>\n            </span>\n          </div>\n          <div class='film-month_info-item'>\n            <span class='film-month_info-label'>Popularity</span>\n            <span class='film-month_info-value span-value'>${round(\n              popularity,\n              10\n            )}</span>\n          </div>\n          <div class='film-month_info-item'>\n            <span class='film-month_info-label'>Genre</span>\n            <span class='film-month_info-value span-value'>${filmGenres}</span>\n          </div>\n        </div>\n        <div class='film-month_about'>\n          <h4 class='film-month_about-title'>About</h4>\n          <p class='film-month_about-description'>${overview}</p>\n        </div>\n        <div class='film-month_button'>\n          <button class='button film-month_button-add' data-id='${film.id}'>\n          ${isInLibrary ? 'Remove from my library' : 'Add to my library'}\n          </button>\n        </div>\n      </div>\n  `;\n};\n","function round(number, digits) {\n  return Math.round(number * digits) / digits;\n}\n\nconst getRandomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nfunction renderStars(element, rating) {\n  return (element.innerHTML = `\n    <div class=\"film_rating\" style=\"--rating:${\n      rating / 2\n    };\" aria-label=\"Rating of this film is ${Math.round(\n    rating / 2\n  )} out of 5.\"></div>\n`);\n}\n\nexport { round, getRandomNumber, renderStars };\n","export class MovieLibrary {\n  constructor() {\n    this.library = [];\n    this.loadLibraryFromLocalStorage();\n  }\n\n  loadLibraryFromLocalStorage() {\n    const libraryJSON = localStorage.getItem('favorite');\n    this.library = libraryJSON ? JSON.parse(libraryJSON) : [];\n  }\n\n  saveLibraryToLocalStorage() {\n    localStorage.setItem('favorite', JSON.stringify(this.library));\n  }\n\n  isFilmInLibrary(id) {\n    return this.library.some(libraryFilm => libraryFilm.id == id);\n  }\n\n  addFilmToLibrary(film) {\n    this.library.push(film);\n    this.saveLibraryToLocalStorage();\n  }\n\n  removeFilmFromLibrary(film) {\n    const index = this.library.findIndex(\n      libraryFilm => libraryFilm.id === film.id\n    );\n    if (index !== -1) {\n      this.library.splice(index, 1);\n      this.saveLibraryToLocalStorage();\n    }\n  }\n}\n"],"names":["$dK6vY","parcelRequire","$504f2e7c7c3fccdf$var$currentFilm","filmMonthWrapper","document","querySelector","$dpMC2","spinnerStart","film","getRandomFilmOfMonth","findFilm","getCategoriesId","id","genres","getGenres","innerHTML","$504f2e7c7c3fccdf$var$createMarkup","addEventListener","async","event","movieLibrary","$h3giK","MovieLibrary","isInLibrary","isFilmInLibrary","target","dataset","button","console","log","removeFilmFromLibrary","addFilmToLibrary","textContent","spinnerStop","imageSrc","window","innerWidth","poster_path","overview","title","original_title","releaseDate","Date","release_date","formattedReleaseDate","getDate","toString","padStart","getMonth","getFullYear","voteAverage","vote_average","voteCount","vote_count","popularity","alt","filmGenres","filter","genre","genre_ids","slice","includes","map","name","join","$9Wu9X","round","$73d0ece61bfba828$export$2077e0241d6afd3c","number","digits","Math","$73d0ece61bfba828$export$eab19c48dcb6310d","min","max","floor","random","$73d0ece61bfba828$export$6b958f153b36132a","element","rating","$c69f5c99a1f5378f$export$a77202e529bf9901","constructor","this","library","loadLibraryFromLocalStorage","libraryJSON","localStorage","getItem","JSON","parse","saveLibraryToLocalStorage","setItem","stringify","some","libraryFilm","push","index","findIndex","splice"],"version":3,"file":"film-month.13f87cf4.js.map"}