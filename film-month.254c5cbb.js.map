{"mappings":"C,A,W,I,E,A,C,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,C,E,kB,E,S,Q,S,C,C,C,E,I,E,E,S,E,E,SCGC,AAAA,CAAA,UAEC,GADA,AAAA,CAAA,EAAA,EAAA,YAAA,IACI,AAA6B,MAA7B,OAAO,SAAS,UAAoB,AAA6B,gBAA7B,OAAO,SAAS,SAA4B,OACpF,IAAM,EAAO,MAAM,AAAA,CAAA,EAAA,EAAA,oBAAA,IACnB,QAAQ,IAAI,YAAa,GAEzB,IAAM,EAAS,MAAM,AAAA,CAAA,EAAA,EAAA,SAAA,IACrB,AAAA,CAAA,EAAA,EAAA,WAAA,IAEA,IAAM,EAAmB,SAAS,cAAc,uBAChD,GAAI,EAAkB,CACpB,IAAM,EAAe,EAAa,EAAM,EACxC,CAAA,EAAiB,UAAY,CAC/B,CACF,CAAA,IAEA,IAAM,EAAe,CAAC,EAAM,KAC1B,IAAM,EAAU,OAAO,YAAc,IAAM,kDAAoD,mDACzF,EAAW,EAAU,EAAK,YAC1B,EAAW,EAAK,SAChB,EAAQ,EAAK,eAGb,EAAc,IAAI,KAAK,EAAK,cAC5B,EAAM,EAAY,UAAU,WAAW,SAAS,EAAG,KACnD,EAAS,AAAA,CAAA,EAAY,WAAa,CAAA,EAAG,WAAW,SAAS,EAAG,KAC5D,EAAO,EAAY,cAEnB,EAAuB,CAAC,EAAE,EAAI,CAAC,EAAE,EAAM,CAAC,EAAE,EAAK,CAAC,CAEhD,EAAc,EAAK,aACnB,EAAY,EAAK,WACjB,EAAa,EAAK,WAClB,EAAa,EAChB,OAAO,AAAC,GAAU,EAAK,UAAU,MAAM,EAAG,GAAG,SAAS,EAAM,KAC5D,IAAI,CAAC,CAAA,KAAE,CAAA,CAAM,GAAK,GAClB,KAAK,MAER,MAAO,CAAC;;mDAEyC,EAAE,EAAS;;;;0CAIpB,EAAE,EAAM;;;;;mEAKiB,EAAE,EAAqB;;;;;uCAKnD,EAAE,EAAY;;uCAEd,EAAE,EAAU;;;;;yDAKM,EAAE,EAAW;;;;yDAIb,EAAE,EAAW;;;;;gDAKtB,EAAE,EAAS;;;;;;EAMzD,CAAC,AACH,C,E","sources":["<anon>","src/javascript/film-month.js"],"sourcesContent":["(function () {\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\nparcelRequire.register(\"9mtRG\", function(module, exports) {\n\nvar $8LhE9 = parcelRequire(\"8LhE9\");\n\nvar $dBKQr = parcelRequire(\"dBKQr\");\n(async ()=>{\n    (0, $dBKQr.spinnerStart)();\n    if (window.location.pathname !== \"/\" && window.location.pathname !== \"/index.html\") return;\n    const film = await (0, $8LhE9.getRandomFilmOfMonth)();\n    console.log(\"filmMonth\", film);\n    const genres = await (0, $8LhE9.getGenres)();\n    (0, $dBKQr.spinnerStop)();\n    const filmMonthWrapper = document.querySelector(\".film-month_wrapper\");\n    if (filmMonthWrapper) {\n        const resultMarkup = $6d0d55a67575c206$var$createMarkup(film, genres);\n        filmMonthWrapper.innerHTML = resultMarkup;\n    }\n})();\nconst $6d0d55a67575c206$var$createMarkup = (film, genres)=>{\n    const baseUrl = window.innerWidth <= 600 ? \"https://image.tmdb.org/t/p/w600_and_h900_bestv2\" : \"https://image.tmdb.org/t/p/w1066_and_h600_bestv2\";\n    const imageSrc = baseUrl + film.poster_path;\n    const overview = film.overview;\n    const title = film.original_title;\n    const releaseDate = new Date(film.release_date);\n    const day = releaseDate.getDate().toString().padStart(2, \"0\");\n    const month = (releaseDate.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = releaseDate.getFullYear();\n    const formattedReleaseDate = `${day} ${month} ${year}`;\n    const voteAverage = film.vote_average;\n    const voteCount = film.vote_count;\n    const popularity = film.popularity;\n    const filmGenres = genres.filter((genre)=>film.genre_ids.slice(0, 2).includes(genre.id)).map(({ name: name  })=>name).join(\", \");\n    return `\n    <div class='film-month_image'>\n      <img class='film-month_img movie-image' src='${imageSrc}' alt=''>\n    </div>\n    <div class='film-month_content'>\n      <div>\n        <h3 class='film-month_info-title'>${title}</h3>\n      </div>\n      <div class='film-month_info'>\n        <div class='film-month_info-item'>\n          <span class='film-month_info-label'>Release date</span>\n          <span class='film-month_info-value film-month_info-year'>${formattedReleaseDate}</span>\n        </div>\n        <div class='film-month_info-item'>\n          <span class='film-month_info-label'>Vote/Votes</span>\n          <span class='film-month_info-value'>\n            <span class='value-number'>${voteAverage}</span>\n             <span class='value-separator'>/</span>\n            <span class='value-number'>${voteCount}</span>\n          </span>\n        </div>\n        <div class='film-month_info-item'>\n          <span class='film-month_info-label'>Popularity</span>\n          <span class='film-month_info-value span-value'>${popularity}</span>\n        </div>\n        <div class='film-month_info-item'>\n          <span class='film-month_info-label'>Genre</span>\n          <span class='film-month_info-value span-value'>${filmGenres}</span>\n        </div>\n      </div>\n      <div class='film-month_about'>\n        <h4 class='film-month_about-title'>About</h4>\n        <p class='film-month_about-description'>${overview}</p>\n      </div>\n      <div class='film-month_button'>\n        <button class='film-month_button-add'>Add to my library</button>\n      </div>\n    </div>\n  `;\n};\n\n});\n\n})();\n//# sourceMappingURL=film-month.254c5cbb.js.map\n","import { getGenres, getRandomFilmOfMonth } from './api';\nimport { spinnerStart, spinnerStop } from './spin';\n\n(async () => {\n  spinnerStart()\n  if (window.location.pathname !== '/' && window.location.pathname !== '/index.html') return;\n  const film = await getRandomFilmOfMonth();\n  console.log('filmMonth', film);\n\n  const genres = await getGenres();\n  spinnerStop()\n\n  const filmMonthWrapper = document.querySelector('.film-month_wrapper');\n  if (filmMonthWrapper) {\n    const resultMarkup = createMarkup(film, genres);\n    filmMonthWrapper.innerHTML = resultMarkup;\n  }\n})();\n\nconst createMarkup = (film, genres) => {\n  const baseUrl = window.innerWidth <= 600 ? 'https://image.tmdb.org/t/p/w600_and_h900_bestv2' : 'https://image.tmdb.org/t/p/w1066_and_h600_bestv2';\n  const imageSrc = baseUrl + film.poster_path;\n  const overview = film.overview;\n  const title = film.original_title;\n\n\n  const releaseDate = new Date(film.release_date);\n  const day = releaseDate.getDate().toString().padStart(2, '0');\n  const month = (releaseDate.getMonth() + 1).toString().padStart(2, '0');\n  const year = releaseDate.getFullYear();\n\n  const formattedReleaseDate = `${day} ${month} ${year}`;\n\n  const voteAverage = film.vote_average;\n  const voteCount = film.vote_count;\n  const popularity = film.popularity;\n  const filmGenres = genres\n    .filter((genre) => film.genre_ids.slice(0, 2).includes(genre.id))\n    .map(({ name }) => name)\n    .join(', ');\n\n  return `\n    <div class='film-month_image'>\n      <img class='film-month_img movie-image' src='${imageSrc}' alt=''>\n    </div>\n    <div class='film-month_content'>\n      <div>\n        <h3 class='film-month_info-title'>${title}</h3>\n      </div>\n      <div class='film-month_info'>\n        <div class='film-month_info-item'>\n          <span class='film-month_info-label'>Release date</span>\n          <span class='film-month_info-value film-month_info-year'>${formattedReleaseDate}</span>\n        </div>\n        <div class='film-month_info-item'>\n          <span class='film-month_info-label'>Vote/Votes</span>\n          <span class='film-month_info-value'>\n            <span class='value-number'>${voteAverage}</span>\n             <span class='value-separator'>/</span>\n            <span class='value-number'>${voteCount}</span>\n          </span>\n        </div>\n        <div class='film-month_info-item'>\n          <span class='film-month_info-label'>Popularity</span>\n          <span class='film-month_info-value span-value'>${popularity}</span>\n        </div>\n        <div class='film-month_info-item'>\n          <span class='film-month_info-label'>Genre</span>\n          <span class='film-month_info-value span-value'>${filmGenres}</span>\n        </div>\n      </div>\n      <div class='film-month_about'>\n        <h4 class='film-month_about-title'>About</h4>\n        <p class='film-month_about-description'>${overview}</p>\n      </div>\n      <div class='film-month_button'>\n        <button class='film-month_button-add'>Add to my library</button>\n      </div>\n    </div>\n  `;\n};"],"names":["parcelRequire","$parcel$global","globalThis","self","window","global","register","module","exports","$8LhE9","$dBKQr","spinnerStart","location","pathname","film","getRandomFilmOfMonth","console","log","genres","getGenres","spinnerStop","filmMonthWrapper","document","querySelector","resultMarkup","$6d0d55a67575c206$var$createMarkup","innerHTML","baseUrl","innerWidth","imageSrc","poster_path","overview","title","original_title","releaseDate","Date","release_date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","formattedReleaseDate","voteAverage","vote_average","voteCount","vote_count","popularity","filmGenres","filter","genre","genre_ids","slice","includes","id","map","name","join"],"version":3,"file":"film-month.254c5cbb.js.map"}