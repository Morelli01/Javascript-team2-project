{"mappings":"sSAAA,IAAAA,EAAAC,EAAA,S,0BAMA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,qBAC7BC,QAASF,SAASC,cAAc,sBAChCE,cAAeH,SAASI,eAAe,cACvCC,KAAML,SAASI,eAAe,QAC9BE,SAAUN,SAASC,cAAc,cACjCM,MAAOP,SAASC,cAAc,WAC9BO,mBAAoBR,SAASC,cAAc,oBAG7C,IAAIQ,EAAa,GACbC,EAAc,EACdC,EAAc,GAelB,SAASC,EAAWC,GAClB,MAAMC,EAASD,EACZE,KACC,EAACC,GACCA,EAAEC,YACFA,EAAWC,eACXA,EAAcC,UACdA,EAASC,aACTA,EAAYC,aACZA,EAAYC,eACZA,EAAcC,cACdA,MAEA,IAAIC,EAAMP,EACN,sCAAsCA,IACtC,4DACJ,MAAMQ,EAkDd,SAAmBL,EAAcE,GAO/B,YAL0B,IAAjBF,EACHA,EAAaM,MAAM,KAAK,QACE,IAAnBJ,EACPA,EAAeI,MAAM,KAAK,GAC1B,E,CAxDaC,CAAUP,EAAcE,GAErC,MAAO,wEAAwEN,yCACpDQ,WACzBD,GAAiBL,yKAIgBK,GAAiBL,mDAqB5D,SAAyBU,GACvB,IAAIC,EAAiB,QACG,IAAbD,IACTC,EAAiBD,EACdE,QAAOC,QAA0B,IAAVA,IACvBhB,KAAIgB,GACEtB,EAAWsB,GAGTtB,EAAWsB,GAFT,UAKXF,EAAeG,OAAS,IAC1BH,EAAiBA,EAAeI,MAAM,EAAG,IAE3C,OAA8B,IAA1BJ,EAAeG,OACV,OAEFH,EAAeK,KAAK,K,CA9CTC,CAAgBhB,QAQkBM,mJAItCJ,EAAe,2CACwB,EAAAe,EAAAC,OAC7ChB,EAAe,EACf,2GAME,IAGPa,KAAK,IACRpC,EAAKC,KAAKuC,UAAYxB,C,EAvDxB,EAAAlB,EAAA2C,aACGC,MAAKC,IACJA,EAAIC,SAAQ,EAAC1B,GAAEA,EAAE2B,KAAEA,MACjBlC,EAAWO,GAAM2B,CAAI,KAEhB,EAAA/C,EAAAgD,UAASlC,MAEjB8B,MAAKK,IACJjC,EAAWiC,EAAeC,SAsG9B,SAA6BC,GAC3B,GAAIA,EAASC,cAAgB,GAAI,CAC/BlD,EAAKK,cAAc8C,UAAUC,OAAO,mBAEjB,EAAAC,EAAAC,kBACjBL,EAASC,cACTD,EAASM,aAGAC,GAAG,aAAaC,IACzB7C,EAAc6C,EAAMC,MACpB,EAAA5D,EAAAgD,UAASlC,GACN8B,MAAK3B,IACJD,EAAWC,EAAKiC,SAChBW,OAAOC,SAAS,CACdC,IAAK,IACLC,SAAU,UACV,IAEHC,OAAMC,IACLC,QAAQD,MAAM,SAAUA,EAAM,GAC9B,G,EA1HNE,CAAoBnB,EAAe,IAEpCgB,OAkKH,SAAeI,GACbF,QAAQG,IAAID,E,IArFdnE,EAAKO,KAAK8D,iBAAiB,UAE3BC,eAAwBC,GACtBA,EAAGC,iBACH5D,EAAc,EACdC,EAAc0D,EAAGE,cAAcC,SAASC,UAAUC,MAAMC,OACxD7E,EAAKK,cAAc8C,UAAU2B,IAAI,kBACjC9E,EAAKU,mBAAmByC,UAAU2B,IAAI,kBAElCjE,EAAYqB,QAAU,GACxBlC,EAAKQ,SAAS2C,UAAUC,OAAO,aAGjC,MAAMH,QAAiB,EAAAnD,EAAAiF,oBAAmBlE,EAAaD,GACvDZ,EAAKC,KAAKuC,UAAY,GAEtB1B,EAAWmC,EAASD,SA+BtB,SAA+BC,GAC7B,GAAIA,EAASC,cAAgB,GAAI,CAC/BlD,EAAKK,cAAc8C,UAAUC,OAAO,mBAEjB,EAAAC,EAAAC,kBACjBL,EAASC,cACTD,EAASM,aAGAC,GAAG,aAAaC,IACzB7C,EAAc6C,EAAMC,MACpB,EAAA5D,EAAAiF,oBAAmBlE,EAAaD,GAC7B8B,MAAK3B,IACJD,EAAWC,EAAKiC,SAChBW,OAAOC,SAAS,CACdC,IAAK,IACLC,SAAU,UACV,IAEHC,OAAMC,IACLC,QAAQD,MAAM,SAAUA,EAAM,GAC9B,G,EAnDRgB,CAAsB/B,GAwDxB,SAA4BA,GACK,IAA3BA,EAASC,eACXlD,EAAKU,mBAAmByC,UAAUC,OAAO,iB,CAzD3C6B,CAAmBhC,E,IA6DrBjD,EAAKQ,SAAS6D,iBAAiB,SAAS,KACtCrE,EAAKQ,SAAS2C,UAAU2B,IAAI,aAC5B9E,EAAKO,KAAK2E,OAAO,G,sCC9LnB,SAASC,EAAMC,EAAQC,GACrB,OAAOC,KAAK/C,MAAM6C,EAASC,GAAUA,C,qJAGvC,MAAME,EAAkB,CAACC,EAAKC,IACrBH,KAAKI,MAAMJ,KAAKK,UAAYF,EAAMD,EAAM,IAAMA,EAGvD,SAASI,EAAYC,EAASC,GAC5B,OAAQD,EAAQrD,UAAY,kDAExBsD,EAAS,0CAC8BR,KAAK/C,MAC9CuD,EAAS,wB","sources":["src/javascript/film-catalog.js","src/javascript/utils.js"],"sourcesContent":["'use strict';\nimport { getFilms, getGenres, getCategoriesQuery } from './api';\nimport { createPagination } from './pagination';\nimport { round } from './utils';\n\n\nconst refs = {\n  ulEl: document.querySelector('.search_film_list'),\n  inputEl: document.querySelector('.search_film_input'),\n  divPagination: document.getElementById('pagination'),\n  form: document.getElementById('form'),\n  btnReset: document.querySelector('.btn_reset'),\n  toTop: document.querySelector('.to_top'),\n  falseResultMessage: document.querySelector('.cards__message'),\n};\n\nlet categories = {};\nlet currentPage = 1;\nlet searchQuery = '';\n\ngetGenres()\n  .then(res => {\n    res.forEach(({ id, name }) => {\n      categories[id] = name;\n    });\n    return getFilms(currentPage);\n  })\n  .then(categoriesData => {\n    markupFilm(categoriesData.results);\n    paginationTrendWeek(categoriesData);\n  })\n  .catch(Error);\n\nfunction markupFilm(data) {\n  const markup = data\n    .map(\n      ({\n        id,\n        poster_path,\n        original_title,\n        genre_ids,\n        release_date,\n        vote_average,\n        first_air_date,\n        original_name,\n      }) => {\n        let url = poster_path\n          ? `https://image.tmdb.org/t/p/original${poster_path}`\n          : 'https://www.tgv.com.my/assets/images/404/movie-poster.jpg';\n        const year = yearsFilm(release_date, first_air_date);\n        let genre = categoriesFilms(genre_ids);\n        return `<li class=\"search_film_img_wrap movie-image list_item\" data-film-id='${id}'>\n        <img loading=\"lazy\" src=\"${url}\" alt=\"${\n          original_name || original_title\n        }\" width=\"395\" height=\"574\" class=\"search_film_img\"/>\n        <div class=\"wrap\">\n          <div class=\"search_film_wrap\">\n            <p class=\"search_film_title\">${original_name || original_title}</p>\n            <p class=\"search_film_genre\">${genre} | ${year}</p> \n            <div class=\"stars\">\n            <div class='film_rating-wrapper'>\n              <div class='film_rating' style='--rating: ${\n                vote_average / 2\n              };' aria-label='Rating of this film is ${round(\n          vote_average / 2,\n          10\n        )} out of 5.'></div>\n            </div>\n         </div>\n          </div>\n        </div>\n      </li>`;\n      }\n    )\n    .join('');\n  refs.ulEl.innerHTML = markup;\n}\n\nfunction categoriesFilms(genreIds) {\n  let categoriesFilm = [];\n  if (typeof genreIds !== 'undefined') {\n    categoriesFilm = genreIds\n      .filter(genre => typeof genre !== 'undefined')\n      .map(genre => {\n        if (!categories[genre]) {\n          return 'Film';\n        }\n        return categories[genre];\n      });\n  }\n  if (categoriesFilm.length > 2) {\n    categoriesFilm = categoriesFilm.slice(0, 2);\n  }\n  if (categoriesFilm.length === 0) {\n    return 'Film';\n  }\n  return categoriesFilm.join(', ');\n}\n\nfunction yearsFilm(release_date, first_air_date) {\n  const year =\n    typeof release_date !== 'undefined'\n      ? release_date.split('-')[0]\n      : typeof first_air_date !== 'undefined'\n      ? first_air_date.split('-')[0]\n      : '';\n  return year;\n}\n\nrefs.form.addEventListener('submit', onSubmit);\n\nasync function onSubmit(ev) {\n  ev.preventDefault();\n  currentPage = 1;\n  searchQuery = ev.currentTarget.elements.film_name.value.trim();\n  refs.divPagination.classList.add('display-hidden');\n  refs.falseResultMessage.classList.add('display-hidden');\n\n  if (searchQuery.length >= 1) {\n    refs.btnReset.classList.remove('is-hidden');\n  }\n\n  const response = await getCategoriesQuery(searchQuery, currentPage);\n  refs.ulEl.innerHTML = '';\n\n  markupFilm(response.results);\n  paginationSearchFilms(response);\n  addFalseResultText(response);\n}\n\nfunction paginationTrendWeek(response) {\n  if (response.total_results > 20) {\n    refs.divPagination.classList.remove('display-hidden');\n\n    const pagination = createPagination(\n      response.total_results,\n      response.total_pages\n    );\n\n    pagination.on('afterMove', event => {\n      currentPage = event.page;\n      getFilms(currentPage)\n        .then(data => {\n          markupFilm(data.results);\n          window.scrollTo({\n            top: 450,\n            behavior: 'smooth',\n          });\n        })\n        .catch(error => {\n          console.error('Error:', error);\n        });\n    });\n  }\n}\n\nfunction paginationSearchFilms(response) {\n  if (response.total_results > 20) {\n    refs.divPagination.classList.remove('display-hidden');\n\n    const pagination = createPagination(\n      response.total_results,\n      response.total_pages\n    );\n\n    pagination.on('afterMove', event => {\n      currentPage = event.page;\n      getCategoriesQuery(searchQuery, currentPage)\n        .then(data => {\n          markupFilm(data.results);\n          window.scrollTo({\n            top: 450,\n            behavior: 'smooth',\n          });\n        })\n        .catch(error => {\n          console.error('Error:', error);\n        });\n    });\n  }\n}\n\nfunction addFalseResultText(response) {\n  if (response.total_results === 0) {\n    refs.falseResultMessage.classList.remove('display-hidden');\n  }\n}\n\nrefs.btnReset.addEventListener('click', () => {\n  refs.btnReset.classList.add('is-hidden');\n  refs.form.reset();\n});\n\nfunction Error(err) {\n  console.log(err);\n}\n","function round(number, digits) {\n  return Math.round(number * digits) / digits;\n}\n\nconst getRandomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nfunction renderStars(element, rating) {\n  return (element.innerHTML = `\n    <div class=\"film_rating\" style=\"--rating:${\n      rating / 2\n    };\" aria-label=\"Rating of this film is ${Math.round(\n    rating / 2\n  )} out of 5.\"></div>\n`);\n}\n\nexport { round, getRandomNumber, renderStars };\n"],"names":["$dK6vY","parcelRequire","$f86c2bb9432d860c$var$refs","ulEl","document","querySelector","inputEl","divPagination","getElementById","form","btnReset","toTop","falseResultMessage","$f86c2bb9432d860c$var$categories","$f86c2bb9432d860c$var$currentPage","$f86c2bb9432d860c$var$searchQuery","$f86c2bb9432d860c$var$markupFilm","data","markup","map","id","poster_path","original_title","genre_ids","release_date","vote_average","first_air_date","original_name","url","year","split","$f86c2bb9432d860c$var$yearsFilm","genreIds","categoriesFilm","filter","genre","length","slice","join","$f86c2bb9432d860c$var$categoriesFilms","$9Wu9X","round","innerHTML","getGenres","then","res","forEach","name","getFilms","categoriesData","results","response","total_results","classList","remove","$3u1GM","createPagination","total_pages","on","event","page","window","scrollTo","top","behavior","catch","error","console","$f86c2bb9432d860c$var$paginationTrendWeek","err","log","addEventListener","async","ev","preventDefault","currentTarget","elements","film_name","value","trim","add","getCategoriesQuery","$f86c2bb9432d860c$var$paginationSearchFilms","$f86c2bb9432d860c$var$addFalseResultText","reset","$73d0ece61bfba828$export$2077e0241d6afd3c","number","digits","Math","$73d0ece61bfba828$export$eab19c48dcb6310d","min","max","floor","random","$73d0ece61bfba828$export$6b958f153b36132a","element","rating"],"version":3,"file":"film-catalog.96de0a44.js.map"}