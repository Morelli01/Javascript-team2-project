{"mappings":"kTAAA,IAQiBA,EAWTC,EAnBRC,EAAAC,EAAA,S,aAKMC,EAAOC,SAASC,cAAc,qBAC9BC,EAAiBF,SAASC,cAAc,oBACxCE,EAAeH,SAASC,cAAc,kBACtCG,EAAyD,QAA9CT,EAAAU,KAAKC,MAAMC,aAAaC,QALpB,oBAK0C,IAA9Cb,IAAkD,IAEnE,EAAAE,EAAAY,aACGC,MAAK,SAAAC,GACJA,EAAIC,SAAQ,SAAAC,G,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KACjBC,WAAWF,GAAMC,C,OAGpBE,MAAMC,OAuELd,EAASe,OAAS,GACpBjB,EAAekB,UAAUC,OAAO,kBArE1BzB,EAsEKQ,EArERkB,KACC,SAAAT,G,IAoDmBU,EACnBC,EApDEC,EAAWZ,EAAXY,YACAC,EAAab,EAAba,cACAC,EAAcd,EAAdc,eACAC,EAAMf,EAANe,OACAC,EAAYhB,EAAZgB,aACAC,EAAYjB,EAAZiB,aACAC,EAAclB,EAAdkB,eACAjB,EAAED,EAAFC,GAEIkB,EAAMP,EACN,sCAAkDQ,OAAZR,GACtC,4DACES,EA6Bd,SAAmBL,EAAcE,GAO/B,YAL0B,IAAjBF,EACHA,EAAaM,MAAM,KAAK,QACE,IAAnBJ,EACPA,EAAeI,MAAM,KAAK,GAC1B,E,CAnCaC,CAAUP,EAAcE,GACjCM,GAuCNb,EAAiB,QACG,KAFDD,EAtCWK,KAyChCJ,EAAiBD,EAASD,KAAI,SAAAe,G,OAASA,EAAMtB,I,KAE3CS,EAAeL,OAAS,IAC1BK,EAAiBA,EAAec,MAAM,EAAG,IAEb,IAA1Bd,EAAeL,OACV,OAEFK,EAAee,KAAK,OAhDrB,MAAO,yEACoBN,OADoDnB,EAAG,0CAEhFmB,OADyBD,EAAI,WAKIC,OAJjCP,GAAiBC,EAClB,yKAIkCM,OADAP,GAAiBC,EAAe,mDACrBM,OAAXI,EAAM,OAIjCJ,OAJsCC,EAAK,qJAKJD,OADvCH,EAAe,EAChB,0CAGLG,QAH6C,EAAAO,EAAAC,OAC7CX,EAAe,EACf,IACA,yG,IAQLS,KAAK,IACRxC,EAAK2C,UAAY9C,GA+BjBO,EAAaiB,UAAUC,OAAO,iB,sCC3FhC,SAASsB,EAAMC,EAAQC,GACrB,OAAOC,KAAKL,MAAMG,EAASC,GAAUA,C,qJAGvC,IAAME,EAAkB,SAACC,EAAKC,GAC5B,OAAOH,KAAKI,MAAMJ,KAAKK,UAAYF,EAAMD,EAAM,IAAMA,C,EAGvD,SAASI,EAAYC,EAASC,GAC5B,OAAQD,EAAQX,UAAY,kDAGeT,OADvCqB,EAAS,EACV,0CAEDrB,OAFyCa,KAAKL,MAC9Ca,EAAS,GACT,uB","sources":["src/javascript/favorite.js","src/javascript/utils.js"],"sourcesContent":["import { getGenres } from './api';\nimport { round } from './utils';\n\nconst KEY_FAVORITE = 'favorite';\n\nconst list = document.querySelector('.search_film_list');\nconst librarySection = document.querySelector('.library-section');\nconst errorSectoin = document.querySelector('.error-section');\nconst favorite = JSON.parse(localStorage.getItem(KEY_FAVORITE)) ?? [];\n\ngetGenres()\n  .then(res => {\n    res.forEach(({ id, name }) => {\n      categories[id] = name;\n    });\n  })\n  .catch(Error);\n\nfunction markupFilm(favorite) {\n  const markup = favorite\n    .map(\n      ({\n        poster_path,\n        original_name,\n        original_title,\n        genres,\n        release_date,\n        vote_average,\n        first_air_date,\n        id,\n      }) => {\n        let url = poster_path\n          ? `https://image.tmdb.org/t/p/original${poster_path}`\n          : 'https://www.tgv.com.my/assets/images/404/movie-poster.jpg';\n        const year = yearsFilm(release_date, first_air_date);\n        let genre = categoriesFilms(genres);\n        return `<li class=\"search_film_img_wrap movie-image list_item\" data-film-id='${id}'>\n        <img loading=\"lazy\" src=\"${url}\" alt=\"${\n          original_name || original_title\n        }\" width=\"395\" height=\"574\" class=\"search_film_img\"/>\n        <div class=\"wrap\">\n          <div class=\"search_film_wrap\">\n            <p class=\"search_film_title\">${original_name || original_title}</p>\n            <p class=\"search_film_genre\">${genre} | ${year}</p> \n            <div class=\"stars\">\n            <div class='film_rating-wrapper'>\n              <div class='film_rating' style='--rating: ${\n                vote_average / 2\n              };' aria-label='Rating of this film is ${round(\n          vote_average / 2,\n          10\n        )} out of 5.'></div>\n            </div>\n         </div>\n          </div>\n        </div>\n      </li>`;\n      }\n    )\n    .join('');\n  list.innerHTML = markup;\n}\n\nfunction yearsFilm(release_date, first_air_date) {\n  const year =\n    typeof release_date !== 'undefined'\n      ? release_date.split('-')[0]\n      : typeof first_air_date !== 'undefined'\n      ? first_air_date.split('-')[0]\n      : '';\n  return year;\n}\n\nfunction categoriesFilms(genreIds) {\n  let categoriesFilm = [];\n  if (typeof genreIds !== 'undefined') {\n    categoriesFilm = genreIds.map(genre => genre.name)\n  }\n  if (categoriesFilm.length > 2) {\n    categoriesFilm = categoriesFilm.slice(0, 2);\n  }\n  if (categoriesFilm.length === 0) {\n    return 'Film';\n  }\n  return categoriesFilm.join(', ');\n}\n\nif (favorite.length > 0) {\n  librarySection.classList.remove('display-hidden');\n  markupFilm(favorite);\n} else {\n  errorSectoin.classList.remove('display-hidden');\n}\n","function round(number, digits) {\n  return Math.round(number * digits) / digits;\n}\n\nconst getRandomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nfunction renderStars(element, rating) {\n  return (element.innerHTML = `\n    <div class=\"film_rating\" style=\"--rating:${\n      rating / 2\n    };\" aria-label=\"Rating of this film is ${Math.round(\n    rating / 2\n  )} out of 5.\"></div>\n`);\n}\n\nexport { round, getRandomNumber, renderStars };\n"],"names":["$9864e74719ae02e5$var$ref","markup","$8LhE9","parcelRequire","$9864e74719ae02e5$var$list","document","querySelector","$9864e74719ae02e5$var$librarySection","$9864e74719ae02e5$var$errorSectoin","$9864e74719ae02e5$var$favorite","JSON","parse","localStorage","getItem","getGenres","then","res","forEach","param","id","name","categories","catch","Error","length","classList","remove","map","genreIds","categoriesFilm","poster_path","original_name","original_title","genres","release_date","vote_average","first_air_date","url","concat","year","split","$9864e74719ae02e5$var$yearsFilm","genre","slice","join","$3RRSf","round","innerHTML","$2d101c92898a7d81$export$2077e0241d6afd3c","number","digits","Math","$2d101c92898a7d81$export$eab19c48dcb6310d","min","max","floor","random","$2d101c92898a7d81$export$6b958f153b36132a","element","rating"],"version":3,"file":"favorite.a6fd37c5.js.map"}