{"mappings":"qsBAAA,IAAAA,EAAAC,EAAA,S,oDAEMC,EAAW,+BACXC,EAAU,mCAETC,ECLJ,W,sBDKUC,I,aAETC,KAAKC,KAAO,EACZD,KAAKE,YAAc,EACnBF,KAAKG,cAAgB,C,iBAEjBC,IAAA,gB,MAAN,W,kBAAAC,EAAAX,EAAA,CAAAW,EAAAC,GAAAC,MAAA,SAAAC,I,IAEUC,E,wEADS,oB,SACMC,EAAAC,QAAMC,IAC3B,GAAeC,OAAZjB,EAAS,KAAuBiB,OAFpB,oBAES,aAA2BA,OAAhBhB,EAAQ,UAAkBgB,OAAVC,EAAKb,KAAK,oB,cADzDQ,EAAMM,EAAAC,KAAJP,K,SAINK,EAAKZ,YAAcO,EAAKP,YACxBY,EAAKX,cAAgBM,EAAKN,c,kBAEnBM,EAAKQ,S,kCAEZC,QAAQC,IAAGJ,EAAAK,I,yDAXf,E,IAcMhB,IAAA,sB,MAAN,W,kBAAAC,EAAAX,EAAA,CAAAW,EAAAC,GAAAC,MAAA,SAAAC,I,IAEUC,E,wEADS,mB,SACMC,EAAAC,QAAMC,IAC3B,GAAeC,OAAZjB,EAAS,KAAuBiB,OAFpB,mBAES,aAA2BA,OAAhBhB,EAAQ,UAAkBgB,OAAVC,EAAKb,KAAK,oB,cADzDQ,EAAMM,EAAAC,KAAJP,K,2BAKCA,EAAKY,Q,gCAEZH,QAAQC,IAAGJ,EAAAK,I,wDATf,E,IAYMhB,IAAA,qB,MAAN,SAAyBkB,G,kBAAzBjB,EAAAX,EAAA,CAAAW,EAAAC,GAAAC,MAAA,SAAAC,I,IAEUC,E,wEADS,e,SACMC,EAAAC,QAAMC,IAC3B,GAAeC,OAAZjB,EAAS,KAAuBiB,OAFpB,eAES,aAA4BA,OAAjBhB,EAAQ,WAAuBgB,OAAdS,EAAM,UAAkBT,OAAVC,EAAKb,KAAK,oB,cADxEQ,EAAMM,EAAAC,KAAJP,K,2BAKCA,EAAKQ,S,gCAEZC,QAAQC,IAAGJ,EAAAK,I,wDATf,E,OCrCC,E","sources":["src/javascript/mylibraryapi.js","<<jsx-config-pragma.js>>"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '468c2ebbcd20d786d16a982ad3dded4a';\n\nexport class filmAPI {\n  constructor() {\n    this.page = 1;\n    this.total_pages = 0;\n    this.total_results = 0;\n  }\n  async getCategories() {\n    const endpoint = 'trending/all/week';\n    const { data } = await axios.get(\n      `${BASE_URL}/${endpoint}?api_key=${API_KEY}&page=${this.page}&language=en-US`\n    );\n    try {\n      this.total_pages = data.total_pages;\n      this.total_results = data.total_results;\n\n      return data.results;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async getCategoriesGenres() {\n    const endpoint = 'genre/movie/list';\n    const { data } = await axios.get(\n      `${BASE_URL}/${endpoint}?api_key=${API_KEY}&page=${this.page}&language=en-US`\n    );\n    // console.log(data);\n    try {\n      return data.genres;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async getCategoriesQuery(query) {\n    const endpoint = 'search/movie';\n    const { data } = await axios.get(\n      `${BASE_URL}/${endpoint}?api_key=${API_KEY}&query=${query}&page=${this.page}&language=en-US`\n    );\n    // console.log(data);\n    try {\n      return data.results;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n",null],"names":["$bpxeT","parcelRequire","$de63d9c220f33c69$var$BASE_URL","$de63d9c220f33c69$var$API_KEY","$de63d9c220f33c69$export$a3be1c90e52e1205","filmAPI","this","page","total_pages","total_results","key","$parcel$interopDefault","$2TvXO","mark","_callee","data","$dIxxU","default","get","concat","_this","_ctx","sent","results","console","log","t0","genres","query"],"version":3,"file":"my-library.016f9963.js.map"}