{"mappings":"kTAAA,IAAAA,EAAAC,EAAA,S,0BAIMC,EAAYC,SAASC,cAAc,sBAEzCC,QAAQC,IAAIH,SAASI,YAErBJ,SAASK,iBAAiB,SAAS,SAAUC,IAEzCA,EAAEC,OAAOC,UAAUC,SAAS,cAC5BH,EAAEC,OAAOG,QAAQ,gBAMrB,WACE,IAAMC,EAAcX,SAASY,iBAAiB,kBAC9CV,QAAQC,IAAI,EAAGQ,GACfA,EAAYE,SAAQ,SAAAC,GAClBA,EAAMT,iBAAiB,SAAS,WAC9B,IAAMU,EAAUD,EAAME,QAAQC,OAC9Bf,QAAQC,IAAIW,EAAME,SAClBE,EAAUH,E,OAId,IAAMI,EAAQnB,SAASoB,eAAe,SACtCD,EAAME,MAAMC,QAAU,OAEtB,IAAMC,EAAavB,SAASC,cAAc,sBACpCuB,EAAexB,SAASC,cAAc,8BACtCwB,EAAgBzB,SAASC,cAAc,eACvCyB,EAAc1B,SAASC,cAAc,iBACrC0B,EAAW3B,SAASC,cAAc,iBAElCiB,EAAY,SAAAH,GAChB,IAAMa,EAAS,mCAETC,EAAM,GAAoBC,OADhB,+BACO,WAA4BA,OAAnBf,EAAQ,aAAkBe,OAAPF,GAEnD/B,EAAAkC,QACGC,IAAIH,GACJI,MAAK,SAAAC,GACJ,IAAMC,EAAKD,EAASE,KAAKD,GACnBC,EAAOF,EAASE,KAChBC,EAAQD,EAAKC,MACbC,EAAYF,EAAKG,WACjBC,EAAcJ,EAAKK,aACnBC,EAAaN,EAAKM,WAClBC,EAAQP,EAAKQ,OAAO,GAAGC,KACvBC,EAAWV,EAAKU,SAEhBC,EAAY,kCADCX,EAAKY,YAGlBC,EAAYC,EAAAC,YAAYC,MAAK,SAAAC,G,OAAQA,EAAKlB,KAAOA,C,IACvDpC,EAAUuD,YAAcL,EACpB,yBACA,oBACJ1B,EAAW+B,YAAcjB,EACzBV,EAASX,QAAQmB,GAAK,GAAML,OAAHK,GACzBX,EAAa+B,UAAY,uMAMUzB,OAFAU,EAAY,6GAOMV,OALlBQ,EAAU,gOAYQR,QAPA,EAAA0B,EAAAC,OAC/Cf,EACA,IACA,sMAIqDZ,OAANa,EAAM,yDAI3DlB,EAAc6B,YAAcR,EAC5BpB,EAAYgC,aAAa,MAAOX,GAEhC5B,EAAME,MAAMC,QAAU,M,IAEvBqC,OAAM,SAAAC,GACL1D,QAAQ0D,MAAM,mCAAoCA,E,KAIlDC,EAAa,WACjB1C,EAAME,MAAMC,QAAU,M,EAGJH,EAAMlB,cAAc,oBAC5BI,iBAAiB,QAASwD,GAEtCC,OAAOzD,iBAAiB,SAAS,SAAA0D,GAC3BA,EAAMxD,SAAWY,GACnB0C,G,IAIJ7D,SAASK,iBAAiB,WAAW,SAAUC,GAC/B,WAAVA,EAAE0D,KACJH,G,IAhGFI,E,IAqGJlE,EAAUM,iBAAiB,QAAS6C,EAAAgB,Y,sCClHpC,SAASC,EAAMC,EAAQC,GACrB,OAAOC,KAAKb,MAAMW,EAASC,GAAUA,C,qJAGvC,IAAME,EAAkB,SAACC,EAAKC,GAC5B,OAAOH,KAAKI,MAAMJ,KAAKK,UAAYF,EAAMD,EAAM,IAAMA,C,EAGvD,SAASI,EAAYC,EAASC,GAC5B,OAAQD,EAAQtB,UAAY,kDAGezB,OADvCgD,EAAS,EACV,0CAEDhD,OAFyCwC,KAAKb,MAC9CqB,EAAS,GACT,uB","sources":["src/javascript/modal-window.js","src/javascript/utils.js"],"sourcesContent":["import axios from 'axios';\nimport { round } from './utils';\nimport { onClickFilm, favoriteArr } from './local_storage';\n\nconst addBtnLib = document.querySelector('.js_add_collection');\n\nconsole.log(document.readyState);\n\ndocument.addEventListener('click', function (e) {\n  if (\n    e.target.classList.contains('list_item') ||\n    e.target.closest('.list_item')\n  ) {\n    initModal();\n  }\n});\n\nfunction initModal() {\n  const movieImages = document.querySelectorAll('[data-film-id]');\n  console.log(1, movieImages);\n  movieImages.forEach(image => {\n    image.addEventListener('click', () => {\n      const movieId = image.dataset.filmId;\n      console.log(image.dataset);\n      openModal(movieId);\n    });\n  });\n\n  const modal = document.getElementById('modal');\n  modal.style.display = 'none';\n\n  const movieTitle = document.querySelector('.modal-title-movie');\n  const movieDetails = document.querySelector('.movie-details table tbody');\n  const movieOverview = document.querySelector('.about-text');\n  const moviePoster = document.querySelector('.modal-poster');\n  const movieDiv = document.querySelector('.more-details');\n\n  const openModal = movieId => {\n    const apiKey = '97fe01addf81f73693338979426ece1e';\n    const baseUrl = 'https://api.themoviedb.org/3';\n    const url = `${baseUrl}/movie/${movieId}?api_key=${apiKey}`;\n\n    axios\n      .get(url)\n      .then(response => {\n        const id = response.data.id;\n        const data = response.data;\n        const title = data.title;\n        const voteCount = data.vote_count;\n        const voteAverage = data.vote_average;\n        const popularity = data.popularity;\n        const genre = data.genres[0].name;\n        const overview = data.overview;\n        const posterPath = data.poster_path;\n        const posterUrl = 'https://image.tmdb.org/t/p/w500' + posterPath;\n\n        const inStorage = favoriteArr.some(film => film.id === id);\n        addBtnLib.textContent = inStorage\n          ? 'Remove from my library'\n          : 'Add to my library';\n        movieTitle.textContent = title;\n        movieDiv.dataset.id = `${id}`;\n        movieDetails.innerHTML = `\n<div class='film-month_info-item'>\n            <span class='film-month_info-label'>Vote/Votes</span>\n            <span class='film-month_info-value'>\n              <span class='value-number'>${voteAverage}</span>\n               <span class='value-separator'>/</span>\n              <span class='value-number'>${voteCount}</span>\n            </span>\n          </div>\n          <div class='film-month_info-item'>\n            <span class='film-month_info-label'>Popularity</span>\n            <span class='film-month_info-value span-value'>${round(\n              popularity,\n              10\n            )}</span>\n          </div>\n          <div class='film-month_info-item'>\n            <span class='film-month_info-label'>Genre</span>\n            <span class='film-month_info-value span-value'>${genre}</span>\n          </div>\n        </div>\n          `;\n        movieOverview.textContent = overview;\n        moviePoster.setAttribute('src', posterUrl);\n\n        modal.style.display = 'flex';\n      })\n      .catch(error => {\n        console.error('Error getting movie information:', error);\n      });\n  };\n\n  const closeModal = () => {\n    modal.style.display = 'none';\n  };\n\n  const closeButton = modal.querySelector('.modal-close-btn');\n  closeButton.addEventListener('click', closeModal);\n\n  window.addEventListener('click', event => {\n    if (event.target === modal) {\n      closeModal();\n    }\n  });\n\n  document.addEventListener('keydown', function (e) {\n    if (e.key === 'Escape') {\n      closeModal();\n    }\n  });\n}\n\naddBtnLib.addEventListener('click', onClickFilm);\n","function round(number, digits) {\n  return Math.round(number * digits) / digits;\n}\n\nconst getRandomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nfunction renderStars(element, rating) {\n  return (element.innerHTML = `\n    <div class=\"film_rating\" style=\"--rating:${\n      rating / 2\n    };\" aria-label=\"Rating of this film is ${Math.round(\n    rating / 2\n  )} out of 5.\"></div>\n`);\n}\n\nexport { round, getRandomNumber, renderStars };\n"],"names":["$dIxxU","parcelRequire","$739b8b6fcdcbfb13$var$addBtnLib","document","querySelector","console","log","readyState","addEventListener","e","target","classList","contains","closest","movieImages","querySelectorAll","forEach","image","movieId","dataset","filmId","openModal","modal","getElementById","style","display","movieTitle","movieDetails","movieOverview","moviePoster","movieDiv","apiKey","url","concat","default","get","then","response","id","data","title","voteCount","vote_count","voteAverage","vote_average","popularity","genre","genres","name","overview","posterUrl","poster_path","inStorage","$cLNaR","favoriteArr","some","film","textContent","innerHTML","$3RRSf","round","setAttribute","catch","error","closeModal","window","event","key","$739b8b6fcdcbfb13$var$initModal","onClickFilm","$2d101c92898a7d81$export$2077e0241d6afd3c","number","digits","Math","$2d101c92898a7d81$export$eab19c48dcb6310d","min","max","floor","random","$2d101c92898a7d81$export$6b958f153b36132a","element","rating"],"version":3,"file":"modal-window.630eeaae.js.map"}