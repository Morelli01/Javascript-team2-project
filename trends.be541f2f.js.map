{"mappings":"wQAAA,IAAAA,EAAAC,EAAA,S,sDAICC,EAAAF,EAAA,CAAAE,EAAAC,GAAAC,MAAA,SAAAC,I,IAGOC,EAEAC,EAEAC,EACFC,EAMGC,EAAAC,EAAAC,EAHCC,EAGDC,EAAAC,EAAMC,E,qEAZoB,MAA7BC,OAAOC,SAASC,UAAiD,gBAA7BF,OAAOC,SAASC,SAA0B,C,iEAC9D,EAAAC,EAAAC,UAAS,G,cAAvBf,EAAKgB,EAAAC,KAELhB,EAAWD,EAAMkB,QAAQC,MAAM,EAAG,G,UAEnB,EAAAL,EAAAM,a,UAAflB,EAAMc,EAAAC,KACRd,EAAe,GAMZC,GAAU,EAAVC,GAAU,EAAVC,OAAUe,IAJbV,OAAOW,YAAc,KAAG,C,uBACpBf,EAAON,EAAS,G,UACDsB,EAAiBhB,EAAML,G,QAA5CC,EAAYa,EAAAC,K,kCAEPT,EAAcP,EAAQuB,OAAAC,Y,WAAtBrB,GAAAK,EAAAD,EAAUkB,QAAAC,KAAA,C,uBAAJjB,EAAND,EAAUmB,M,KACbzB,E,UAAsBoB,EAAiBb,EAAMR,G,QAA7CC,EAAYa,EAAAa,IAAAb,EAAAC,K,QADTb,GAAU,E,2EAAVC,GAAU,EAAVC,EAAUU,EAAAc,G,4BAAV1B,GAAU,MAAVI,EAAUuB,QAAVvB,EAAUuB,S,sBAAV1B,EAAU,C,sBAAVC,E,gEAKP0B,SAASC,cAAc,uBAAuBC,UAAY/B,E,4EAnB3D,GAuBD,I,EAAMoB,G,EAAmB3B,EAAAF,EAAA,CAAAE,EAAAC,GAAAC,MAAA,SAAAC,EAAOQ,EAAML,G,IAE9BiC,EACAC,EACAC,EACAC,EAEAC,E,yEALAJ,EADU,kDACW5B,EAAKiC,cAC1BJ,EAAQ7B,EAAKkC,eACbJ,EAAc9B,EAAKmC,aAAaC,MAAM,KAAK,GAC3CL,EAAc/B,EAAKqC,aAEnBL,EAAarC,EAChB2C,QAAO,SAACC,G,OAAUvC,EAAKwC,UAAU5B,MAAM,EAAG,GAAG6B,SAASF,EAAMG,G,IAC5DC,KAAI,SAAAC,G,OAAOA,EAAJC,I,IACPC,KAAK,M,kBAED,qDAC+BC,OADsB/C,EAAK0C,GAAG,8CAIjCK,OAHGnB,EAAS,sIAKNmB,OAFNlB,EAAM,gGAE6CkB,OAA7Cf,EAAW,oCAEIe,OAF8BjB,EAAY,kHAEciB,OAAxDhB,EAAc,EAAE,0CAAqEgB,QAA7B,EAAAC,EAAAC,OAAOlB,EAAc,EAAI,IAAI,8G,oDApB/G/B,EAAML,G,iCA8BhCuD,EAAazB,SAASC,cAAc,oBACtCwB,GACFA,EAAWC,iBAAiB,SAAS,WACnC/C,OAAOC,SAAS+C,KAAO,6D,qDC5D3B,SAASC,EAAMC,EAAQC,GACrB,OAAOC,KAAKP,MAAMK,EAASC,GAAUA,C","sources":["src/javascript/trends.js","src/javascript/utils.js"],"sourcesContent":["import { getFilms, getGenres } from './api';\nimport { spinnerStart, spinnerStop } from './spin';\nimport { round } from './utils';\n\n(async () => {\n  // spinnerStart()\n  if (window.location.pathname !== '/' && window.location.pathname !== '/index.html') return;\n  const films = await getFilms(1);\n\n  const topThree = films.results.slice(0, 3);\n\n  const genres = await getGenres();\n  let resultMarkup = '';\n\n  if (window.innerWidth <= 768) {\n    const film = topThree[0];\n    resultMarkup = await createItemMarkup(film, genres);\n  } else {\n    for (const film of topThree) {\n      resultMarkup += await createItemMarkup(film, genres);\n    }\n  }\n  // spinnerStop()\n  document.querySelector('.weekly_trends_list').innerHTML = resultMarkup;\n\n})();\n\nconst createItemMarkup = async (film, genres) => {\n  const baseUrl = 'https://image.tmdb.org/t/p/w600_and_h900_bestv2';\n  const imageSrc = baseUrl + film.backdrop_path;\n  const title = film.original_title;\n  const releaseYear = film.release_date.split('-')[0];\n  const voteAverage = film.vote_average;\n\n  const filmGenres = genres\n    .filter((genre) => film.genre_ids.slice(0, 2).includes(genre.id))\n    .map(({ name }) => name)\n    .join(', ');\n\n  return `<li class='weekly_trends_list_item' data-film-id='${film.id}'>\n        <img class='movie-image' src='${imageSrc}' alt=''>\n        <div class='weekly-trends_description'>\n          <div class='flex-wrap'>\n            <h4 class='film_title'>${title}</h4>\n            <div class='flex-wrap-rating'>\n            <h5 class='film_description'>${filmGenres}<span class='separator'>|</span>${releaseYear}</h5>\n            <div class='film_rating-wrapper'>\n              <div class='film_rating' style='--rating: ${voteAverage / 2};' aria-label='Rating of this film is ${round((voteAverage / 2), 10)} out of 5.'></div>\n            </div>\n          </div>\n\n          </div>\n        </div>\n      </li>`;\n};\n\n\nconst seeAllLink = document.querySelector('.link_to_catalog');\nif (seeAllLink) {\n  seeAllLink.addEventListener('click', () => {\n    window.location.href = 'https://www.themoviedb.org/movie/603692-john-wick-chapter-4';\n  });\n}","function round(number, digits) {\n  return Math.round(number * digits) / digits;\n}\n\nconst getRandomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport {\n  round,\n  getRandomNumber\n}"],"names":["$bpxeT","parcelRequire","$parcel$interopDefault","$2TvXO","mark","_callee","films","topThree","genres","resultMarkup","_iteratorNormalCompletion","_didIteratorError","_iteratorError","film","_iterator","_step","film1","window","location","pathname","$8LhE9","getFilms","_ctx","sent","results","slice","getGenres","undefined","innerWidth","$e444f4c5cdaffc6a$var$createItemMarkup","Symbol","iterator","next","done","value","t0","t1","return","document","querySelector","innerHTML","imageSrc","title","releaseYear","voteAverage","filmGenres","backdrop_path","original_title","release_date","split","vote_average","filter","genre","genre_ids","includes","id","map","param","name","join","concat","$3RRSf","round","$e444f4c5cdaffc6a$var$seeAllLink","addEventListener","href","$2d101c92898a7d81$export$2077e0241d6afd3c","number","digits","Math"],"version":3,"file":"trends.be541f2f.js.map"}