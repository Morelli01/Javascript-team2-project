{"mappings":"sSAAA,IAAAA,EAAAC,EAAA,S,aAGA,MAEMC,EAAOC,SAASC,cAAc,qBAC9BC,EAAiBF,SAASC,cAAc,oBACxCE,EAAeH,SAASC,cAAc,kBACtCG,EAAWC,KAAKC,MAAMC,aAAaC,QALpB,cAK8C,IAEnE,EAAAX,EAAAY,aACGC,MAAKC,IACJA,EAAIC,SAAQ,EAACC,GAAEA,EAAEC,KAAEA,MACjBC,WAAWF,GAAMC,CAAI,GACrB,IAEHE,MAAMC,OAuELb,EAASc,OAAS,GACpBhB,EAAeiB,UAAUC,OAAO,kBAtElC,SAAoBC,GAClB,MAAMC,EAASD,EACZE,KACC,EAACC,YACCA,EAAWC,cACXA,EAAaC,eACbA,EAAcC,OACdA,EAAMC,aACNA,EAAYC,aACZA,EAAYC,eACZA,EAAcjB,GACdA,MAEA,IAAIkB,EAAMP,EACN,sCAAsCA,IACtC,4DACJ,MAAMQ,EA6Bd,SAAmBJ,EAAcE,GAO/B,YAL0B,IAAjBF,EACHA,EAAaK,MAAM,KAAK,QACE,IAAnBH,EACPA,EAAeG,MAAM,KAAK,GAC1B,E,CAnCaC,CAAUN,EAAcE,GAErC,MAAO,wEAAwEjB,yCACpDkB,WACzBN,GAAiBC,yKAIgBD,GAAiBC,mDA+B5D,SAAyBS,GACvB,IAAIC,EAAiB,GAOrB,YANwB,IAAbD,IACTC,EAAiBD,EAASZ,KAAIc,GAASA,EAAMvB,QAE3CsB,EAAelB,OAAS,IAC1BkB,EAAiBA,EAAeE,MAAM,EAAG,IAEb,IAA1BF,EAAelB,OACV,OAEFkB,EAAeG,KAAK,K,CAjDTC,CAAgBb,QAQkBK,mJAItCH,EAAe,2CACwB,EAAAY,EAAAC,OAC7Cb,EAAe,EACf,2GAME,IAGPU,KAAK,IACRxC,EAAK4C,UAAYrB,C,CA6BjBsB,CAAWxC,IAEXD,EAAagB,UAAUC,OAAO,iB,sCC3FhC,SAASyB,EAAMC,EAAQC,GACrB,OAAOC,KAAKN,MAAMI,EAASC,GAAUA,C,qJAGvC,MAAME,EAAkB,CAACC,EAAKC,IACrBH,KAAKI,MAAMJ,KAAKK,UAAYF,EAAMD,EAAM,IAAMA,EAGvD,SAASI,EAAYC,EAASC,GAC5B,OAAQD,EAAQZ,UAAY,kDAExBa,EAAS,0CAC8BR,KAAKN,MAC9Cc,EAAS,wB","sources":["src/javascript/favorite.js","src/javascript/utils.js"],"sourcesContent":["import { getGenres } from './api';\nimport { round } from './utils';\n\nconst KEY_FAVORITE = 'favorite';\n\nconst list = document.querySelector('.search_film_list');\nconst librarySection = document.querySelector('.library-section');\nconst errorSectoin = document.querySelector('.error-section');\nconst favorite = JSON.parse(localStorage.getItem(KEY_FAVORITE)) ?? [];\n\ngetGenres()\n  .then(res => {\n    res.forEach(({ id, name }) => {\n      categories[id] = name;\n    });\n  })\n  .catch(Error);\n\nfunction markupFilm(favorite) {\n  const markup = favorite\n    .map(\n      ({\n        poster_path,\n        original_name,\n        original_title,\n        genres,\n        release_date,\n        vote_average,\n        first_air_date,\n        id,\n      }) => {\n        let url = poster_path\n          ? `https://image.tmdb.org/t/p/original${poster_path}`\n          : 'https://www.tgv.com.my/assets/images/404/movie-poster.jpg';\n        const year = yearsFilm(release_date, first_air_date);\n        let genre = categoriesFilms(genres);\n        return `<li class=\"search_film_img_wrap movie-image list_item\" data-film-id='${id}'>\n        <img loading=\"lazy\" src=\"${url}\" alt=\"${\n          original_name || original_title\n        }\" width=\"395\" height=\"574\" class=\"search_film_img\"/>\n        <div class=\"wrap\">\n          <div class=\"search_film_wrap\">\n            <p class=\"search_film_title\">${original_name || original_title}</p>\n            <p class=\"search_film_genre\">${genre} | ${year}</p> \n            <div class=\"stars\">\n            <div class='film_rating-wrapper'>\n              <div class='film_rating' style='--rating: ${\n                vote_average / 2\n              };' aria-label='Rating of this film is ${round(\n          vote_average / 2,\n          10\n        )} out of 5.'></div>\n            </div>\n         </div>\n          </div>\n        </div>\n      </li>`;\n      }\n    )\n    .join('');\n  list.innerHTML = markup;\n}\n\nfunction yearsFilm(release_date, first_air_date) {\n  const year =\n    typeof release_date !== 'undefined'\n      ? release_date.split('-')[0]\n      : typeof first_air_date !== 'undefined'\n      ? first_air_date.split('-')[0]\n      : '';\n  return year;\n}\n\nfunction categoriesFilms(genreIds) {\n  let categoriesFilm = [];\n  if (typeof genreIds !== 'undefined') {\n    categoriesFilm = genreIds.map(genre => genre.name)\n  }\n  if (categoriesFilm.length > 2) {\n    categoriesFilm = categoriesFilm.slice(0, 2);\n  }\n  if (categoriesFilm.length === 0) {\n    return 'Film';\n  }\n  return categoriesFilm.join(', ');\n}\n\nif (favorite.length > 0) {\n  librarySection.classList.remove('display-hidden');\n  markupFilm(favorite);\n} else {\n  errorSectoin.classList.remove('display-hidden');\n}\n","function round(number, digits) {\n  return Math.round(number * digits) / digits;\n}\n\nconst getRandomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nfunction renderStars(element, rating) {\n  return (element.innerHTML = `\n    <div class=\"film_rating\" style=\"--rating:${\n      rating / 2\n    };\" aria-label=\"Rating of this film is ${Math.round(\n    rating / 2\n  )} out of 5.\"></div>\n`);\n}\n\nexport { round, getRandomNumber, renderStars };\n"],"names":["$dK6vY","parcelRequire","$bdb2a9ec425da367$var$list","document","querySelector","$bdb2a9ec425da367$var$librarySection","$bdb2a9ec425da367$var$errorSectoin","$bdb2a9ec425da367$var$favorite","JSON","parse","localStorage","getItem","getGenres","then","res","forEach","id","name","categories","catch","Error","length","classList","remove","favorite1","markup","map","poster_path","original_name","original_title","genres","release_date","vote_average","first_air_date","url","year","split","$bdb2a9ec425da367$var$yearsFilm","genreIds","categoriesFilm","genre","slice","join","$bdb2a9ec425da367$var$categoriesFilms","$9Wu9X","round","innerHTML","$bdb2a9ec425da367$var$markupFilm","$73d0ece61bfba828$export$2077e0241d6afd3c","number","digits","Math","$73d0ece61bfba828$export$eab19c48dcb6310d","min","max","floor","random","$73d0ece61bfba828$export$6b958f153b36132a","element","rating"],"version":3,"file":"favorite.427709be.js.map"}