{"mappings":"kTAAA,IAAAA,EAAAC,EAAA,S,0BAIMC,EAAYC,SAASC,cAAc,sBAGzCD,SAASE,iBAAiB,SAAS,SAAUC,IAEzCA,EAAEC,OAAOC,UAAUC,SAAS,cAC5BH,EAAEC,OAAOG,QAAQ,gBAMrB,WACsBP,SAASQ,iBAAiB,kBAClCC,SAAQ,SAACC,GACnBA,EAAMR,iBAAiB,SAAS,WAC9B,IAAMS,EAAUD,EAAME,QAAQC,OAC9BC,EAAUH,E,OAId,IAAMI,EAAQf,SAASgB,eAAe,SAChCC,EAAajB,SAASC,cAAc,sBACpCiB,EAAelB,SAASC,cAAc,8BACtCkB,EAAgBnB,SAASC,cAAc,eACvCmB,EAAcpB,SAASC,cAAc,iBACrCoB,EAAWrB,SAASC,cAAc,iBAElCa,EAAY,SAACH,GACjB,IAAMW,EAAS,mCAETC,EAAM,GAAoBC,OADhB,+BACO,WAA4BA,OAAnBb,EAAQ,aAAkBa,OAAPF,GAEnDzB,EAAA4B,QACGC,IAAIH,GACJI,MAAK,SAACC,GACL,IAAMC,EAAKD,EAASE,KAAKD,GACnBC,EAAOF,EAASE,KAChBC,EAAQD,EAAKC,MACbC,EAAYF,EAAKG,WACjBC,EAAcJ,EAAKK,aACnBC,EAAaN,EAAKM,WAClBC,EAAQP,EAAKQ,OAAO,GAAGC,KACvBC,EAAWV,EAAKU,SAEhBC,EAAY,kCADCX,EAAKY,YAGlBC,EAAYC,EAAAC,YAAYC,MAAK,SAACC,G,OAASA,EAAKlB,KAAOA,C,IACzD9B,EAAUiD,YAAcL,EACpB,yBACA,oBACJ1B,EAAW+B,YAAcjB,EACzBV,EAAST,QAAQiB,GAAK,GAAML,OAAHK,GACzBX,EAAa+B,UAAY,iNAMUzB,QAFA,EAAA0B,EAAAC,OAAMjB,EAAa,IAAI,4GAOLV,OALlBQ,EAAU,gOAYQR,QAPA,EAAA0B,EAAAC,OACnDf,EACA,IACA,sMAIyDZ,OAANa,EAAM,uCAI3DlB,EAAc6B,YAAcR,EAC5BpB,EAAYgC,aAAa,MAAOX,GAEhC1B,EAAMsC,MAAMC,QAAU,OACtBtD,SAASuD,KAAKlD,UAAUmD,IAAI,YAC5BxD,SAASE,iBAAiB,QAASuD,GACnCzD,SAASE,iBAAiB,UAAWwD,E,IAEtCC,OAAM,SAACC,GACNC,QAAQD,MAAM,mCAAoCA,E,KAIlDE,EAAa,WACjB/C,EAAMsC,MAAMC,QAAU,OACtBtD,SAASuD,KAAKlD,UAAU0D,OAAO,YAC/BhD,EAAMiD,oBAAoB,QAASP,GACnCzD,SAASgE,oBAAoB,UAAWN,E,EAGtB3C,EAAMd,cAAc,oBAC5BC,iBAAiB,QAAS4D,GAEjB/C,EAAMd,cAAc,kBAC5BC,iBAAiB,QAAS4D,GAEvC,IAAML,EAAsB,SAACQ,GACvBA,EAAM7D,SAAWW,GACnB+C,G,EAIEJ,EAAqB,SAACO,GACR,WAAdA,EAAMC,KACRJ,G,EArGFK,E,IA0GJpE,EAAUG,iBAAiB,QAAS0C,EAAAwB,Y,sCCtHpC,SAASC,EAAMC,EAAQC,GACrB,OAAOC,KAAKrB,MAAMmB,EAASC,GAAUA,C,qJAGvC,IAAME,EAAkB,SAACC,EAAKC,GAC5B,OAAOH,KAAKI,MAAMJ,KAAKK,UAAYF,EAAMD,EAAM,IAAMA,C,EAGvD,SAASI,EAAYC,EAASC,GAC5B,OAAQD,EAAQ9B,UAAY,kDAGezB,OADvCwD,EAAS,EACV,0CAEDxD,OAFyCgD,KAAKrB,MAC9C6B,EAAS,GACT,uB","sources":["src/javascript/modal-window.js","src/javascript/utils.js"],"sourcesContent":["import axios from 'axios';\nimport { round } from './utils';\nimport { onClickFilm, favoriteArr } from './local_storage';\n\nconst addBtnLib = document.querySelector('.js_add_collection');\n\n\ndocument.addEventListener('click', function (e) {\n  if (\n    e.target.classList.contains('list_item') ||\n    e.target.closest('.list_item')\n  ) {\n    initModal();\n  }\n});\n\nfunction initModal() {\n  const movieImages = document.querySelectorAll('[data-film-id]');\n  movieImages.forEach((image) => {\n    image.addEventListener('click', () => {\n      const movieId = image.dataset.filmId;\n      openModal(movieId);\n    });\n  });\n\n  const modal = document.getElementById('modal');\n  const movieTitle = document.querySelector('.modal-title-movie');\n  const movieDetails = document.querySelector('.movie-details table tbody');\n  const movieOverview = document.querySelector('.about-text');\n  const moviePoster = document.querySelector('.modal-poster');\n  const movieDiv = document.querySelector('.more-details');\n\n  const openModal = (movieId) => {\n    const apiKey = '97fe01addf81f73693338979426ece1e';\n    const baseUrl = 'https://api.themoviedb.org/3';\n    const url = `${baseUrl}/movie/${movieId}?api_key=${apiKey}`;\n\n    axios\n      .get(url)\n      .then((response) => {\n        const id = response.data.id;\n        const data = response.data;\n        const title = data.title;\n        const voteCount = data.vote_count;\n        const voteAverage = data.vote_average;\n        const popularity = data.popularity;\n        const genre = data.genres[0].name;\n        const overview = data.overview;\n        const posterPath = data.poster_path;\n        const posterUrl = 'https://image.tmdb.org/t/p/w500' + posterPath;\n\n        const inStorage = favoriteArr.some((film) => film.id === id);\n        addBtnLib.textContent = inStorage\n          ? 'Remove from my library'\n          : 'Add to my library';\n        movieTitle.textContent = title;\n        movieDiv.dataset.id = `${id}`;\n        movieDetails.innerHTML = `\n          <div class='film-month_info-item'>\n            <span class='film-month_info-label'>Vote/Votes</span>\n            <span class='film-month_info-value'>\n              <span class='value-number'>${round(voteAverage, 10)}</span>\n              <span class='value-separator'>/</span>\n              <span class='value-number'>${voteCount}</span>\n            </span>\n          </div>\n          <div class='film-month_info-item'>\n            <span class='film-month_info-label'>Popularity</span>\n            <span class='film-month_info-value span-value'>${round(\n          popularity,\n          10\n        )}</span>\n          </div>\n          <div class='film-month_info-item'>\n            <span class='film-month_info-label'>Genre</span>\n            <span class='film-month_info-value span-value'>${genre}</span>\n          </div>\n        `;\n\n        movieOverview.textContent = overview;\n        moviePoster.setAttribute('src', posterUrl);\n\n        modal.style.display = 'flex';\n        document.body.classList.add('noScroll');\n        document.addEventListener('click', closeModalByOverlay);\n        document.addEventListener('keydown', closeModalByEscape);\n      })\n      .catch((error) => {\n        console.error('Error getting movie information:', error);\n      });\n  };\n\n  const closeModal = () => {\n    modal.style.display = 'none';\n    document.body.classList.remove('noScroll');\n    modal.removeEventListener('click', closeModalByOverlay);\n    document.removeEventListener('keydown', closeModalByEscape);\n  };\n\n  const closeButton = modal.querySelector('.modal-close-btn');\n  closeButton.addEventListener('click', closeModal);\n\n  const closeOverlay = modal.querySelector('.modal-overlay');\n  closeOverlay.addEventListener('click', closeModal);\n\n  const closeModalByOverlay = (event) => {\n    if (event.target === modal) {\n      closeModal();\n    }\n  };\n\n  const closeModalByEscape = (event) => {\n    if (event.key === 'Escape') {\n      closeModal();\n    }\n  };\n}\n\naddBtnLib.addEventListener('click', onClickFilm);\n","function round(number, digits) {\n  return Math.round(number * digits) / digits;\n}\n\nconst getRandomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nfunction renderStars(element, rating) {\n  return (element.innerHTML = `\n    <div class=\"film_rating\" style=\"--rating:${\n      rating / 2\n    };\" aria-label=\"Rating of this film is ${Math.round(\n    rating / 2\n  )} out of 5.\"></div>\n`);\n}\n\nexport { round, getRandomNumber, renderStars };\n"],"names":["$dIxxU","parcelRequire","$739b8b6fcdcbfb13$var$addBtnLib","document","querySelector","addEventListener","e","target","classList","contains","closest","querySelectorAll","forEach","image","movieId","dataset","filmId","openModal","modal","getElementById","movieTitle","movieDetails","movieOverview","moviePoster","movieDiv","apiKey","url","concat","default","get","then","response","id","data","title","voteCount","vote_count","voteAverage","vote_average","popularity","genre","genres","name","overview","posterUrl","poster_path","inStorage","$cLNaR","favoriteArr","some","film","textContent","innerHTML","$3RRSf","round","setAttribute","style","display","body","add","closeModalByOverlay","closeModalByEscape","catch","error","console","closeModal","remove","removeEventListener","event","key","$739b8b6fcdcbfb13$var$initModal","onClickFilm","$2d101c92898a7d81$export$2077e0241d6afd3c","number","digits","Math","$2d101c92898a7d81$export$eab19c48dcb6310d","min","max","floor","random","$2d101c92898a7d81$export$6b958f153b36132a","element","rating"],"version":3,"file":"modal-window.95a72177.js.map"}